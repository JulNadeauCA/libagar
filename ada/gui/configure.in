# Public domain
# ex:syn=bsdbuild
#
# Agar-GUI Ada bindings configure script source.
#
# This is a BSDBuild configure source. The configure script is generated by the
# mkconfigure(1) utility of BSDBuild (http://bsdbuild.hypertriton.com/).
#

package("Agar-Ada-GUI")
version("1.6.0")
release("Nullability Complete")

config_guess("../../mk/config.guess")

register_section("Options for Agar-GUI Ada bindings:")
register("--with-agar[=PREFIX]",          "Location of Agar library [check]")
register("--with-agar-ada-core[=PREFIX]", "Location of Agar-Core Ada bindings [check]")
register("--enable-warnings",             "Suggested compiler warnings [no]")
register("--enable-debug",                "General debugging [no]")

default_dir(DATADIR, "${PREFIX}/share/agar/ada")
default_dir(INCLDIR, "${PREFIX}/include/agar/ada")

require(cc)
require(ada)
require(agar, 1.6.0, ${prefix_agar})
require(agar-core, 1.6.0, ${prefix_agar})
require(agar.defs, 1.6.0, ${prefix_agar})
require(agar-ada-core, 1.6.0, ${prefix_agar_ada_core})

c_define(_USE_AGAR_STD)
c_define(_USE_AGAR_QUEUE)
c_define(_USE_AGAR_TYPES)
c_define(_USE_AGAR_NULLABILITY)

ada_option(-fstack-check)
ada_option(-gnatVa)
ada_option(-gnato)
ada_option(-gnatE)
ada_option(-gnatep=agar_gui_ada_prep.def)

if [ "${enable_warnings}" = "yes" ]; then
	ada_option(-gnatwaleF)
	c_option(-Wall)
	c_option(-Werror)
fi
if [ "${enable_debug}" = "yes" ]; then
	ada_option(-g)
	c_option(-g)
fi

c_incdir($SRC)
c_incdir_config($BLD/config)

config_script(agar-ada-config, "-I${INCLDIR}", "-L${LIBDIR} -lag_ada_gui")
pkgconfig_mod(agar-ada, "Agar-GUI Ada bindings", "agar,agar-ada-core", "", \
              "-I\${includedir}/agar/ada", \
              "-L\${libdir} -lag_ada_gui", \
		 "-lag_ada_gui")
