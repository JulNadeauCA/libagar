# Public domain
# ex:syn=bsdbuild

package("agartest")
version("1.0")

config_guess("../mk/config.guess")

register_section("Agar test suite options:")
register("--with-agar[=PREFIX]", "Location of Agar library [check]")
register("--enable-warnings",    "Suggested compiler warnings [no]")
register("--enable-debug",       "General debugging [no]")

default_dir(DATADIR, "${PREFIX}/share/agartest")
default_dir(LOCALEDIR, "${DATADIR}/locale")

require(cc)
require(agar, 1.6.0, ${prefix_agar})
check(agar-math, 1.6.0, ${prefix_agar})
check(agar-vg, 1.6.0, ${prefix_agar})
check(agar-au, 1.6.0, ${prefix_agar})
check(rand48)

c_incdir($SRC)
c_define(_USE_AGAR_STD)
c_define(_USE_AGAR_QUEUE)
c_define(_USE_AGAR_TYPES)
c_define(_USE_AGAR_ATTRIBUTES)
c_define(_USE_AGAR_NULLABILITY)

if [ "${enable_warnings}" = "yes" ]; then
	c_option(-Wall)
	c_option(-Werror)
	c_option(-Wmissing-prototypes)
	mdefine(WNO_UNINITIALIZED, "-Wno-uninitialized")
else
	mdefine(WNO_UNINITIALIZED, "")
fi

if [ "${enable_debug}" = "yes" ]; then
	mdefine(CFLAGS, "${CFLAGS} -g")
fi

mdefine(SRCS_AUDIO, "")
if [ "${HAVE_AGAR_AU}" = "yes" ]; then
	mappend(SRCS_AUDIO, "audio.c")
fi

mdefine(SRCS_MATH, "")
if [ "${HAVE_AGAR_MATH}" = "yes" ]; then
	mappend(SRCS_MATH, "bezier.c bezier_widget.c math.c plotting.c string.c")
fi

c_incdir($BLD)
c_incdir_config($BLD/config)
