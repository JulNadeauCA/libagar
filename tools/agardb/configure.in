# Public domain
# ex:syn=bsdbuild
#
# agardb configure script source.
#
# This is a BSDBuild configure source. The configure script is generated by the
# mkconfigure(1) utility of BSDBuild (http://bsdbuild.hypertriton.com/).
#

config_guess("../../mk/config.guess")

register_section("agardb options:")
register("--with-agar[=PREFIX]",	"Location of Agar library [check]")
register("--with-llvm[=PREFIX]",	"Location of LLVM [check]")
register("--enable-lldb-utility",	"Use LLDB Utility library [check]")
register("--enable-debug",		"Debug build [no]")
register("--enable-warnings",		"Suggested compiler warnings [no]")

package("agardb")
version("1.0")
default_dir(DATADIR, "${PREFIX}/share/agar")
default_dir(LOCALEDIR, "${DATADIR}/locale")

require(cc)
require(cxx)

require(agar, 1.6.0, ${prefix_agar})
require(lldb, 8.0.0, ${prefix_llvm})
if [ "${enable_lldb_utility}" = "no" ]; then
	mdefine(HAVE_LLDB_UTILITY, no);
	mdefine(LLDB_UTILITY_CFLAGS, "");
	mdefine(LLDB_UTILITY_LIBS, "");
	hundef(HAVE_LLDB_UTILITY);
fi

if [ "${enable_nls}" = "yes" ]; then
	require(gettext)
fi

cxx_define(_USE_AGAR_STD)
cxx_define(_USE_AGAR_QUEUE)
cxx_define(_USE_AGAR_TYPES)
cxx_define(_USE_AGAR_ATTRIBUTES)
cxx_define(_USE_AGAR_NULLABILITY)

if [ "${enable_warnings}" = 'yes' ]; then
	cxx_option(-Wall)
	cxx_option(-Werror)
	cxx_option(-Wmissing-prototypes)
	cxx_option(-Wno-switch)
	cxx_option(-Wno-gnu-anonymous-struct)
	cxx_option(-Wno-nested-anon-types)
fi
if [ "${enable_debug}" = 'yes' ]; then
	hdefine(AGARDB_DEBUG, "yes")
	mdefine(CXXFLAGS, "${CXXFLAGS} -g")
else
	hundef(AGARDB_DEBUG)
	hdefine_if("${enable_type_safety}" = 'yes', AG_TYPE_SAFETY)
fi

cxx_incdir($BLD)

c_incdir_config($BLD/config)
