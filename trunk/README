    _       _       _     ___  
  / _ \   / _ \   / _ \  |  _ \ 
 | |_| | | (_| | | |_| | | |_) |
 |_| |_|  \__, | |_| |_| |_| |_|
          |___/                 

What is it?
-----------
Agar is a type of sugar polymer obtained from seaweed and red algae. Agar
becomes gelatinous in water and is primarly used as a culture medium for
microbiological work. Agar is also the name of an open source GUI toolkit
designed to work in an unobtrusive way, under a great variety of platforms.

Agar is designed to work on any graphics system. Some graphics drivers can
only provide a single "native" window (e.g., SDL). For those drivers, Agar
will display multiple windows inside of a single display, using its built-in
window manager. As of this release, Agar implements the following drivers:

 glx    OpenGL rendering via X Window System (multiple native windows)
 glsdl  OpenGL rendering via SDL (single native window)
 fbsdl  Framebuffer rendering via SDL (single native window)

The OpenGL drivers are preferred when hardware acceleration is available
as it makes efficient use of it. The framebuffer modes are more efficient
when hardware acceleration is unavailable. Although the rendering routines
are different, the appearance of GUI elements remain the same across all
graphics drivers (as far as the default theme is concerned -- it is possible
to write an OpenGL-only theme relying on GL features, for example).

A set of standard, common widgets are included in the Agar-GUI library.
Implementing new widgets as part of a third-party library or application is
a very simple, straightforward task.

The Agar-Core library provides a simple object system which allows for a
lightweight, consistent and portable form of object-oriented programming
under multiple languages. The main features of the object system are
inheritance, serialization, virtual functions / events and per-object
management of resources such as timers and threads. A number of utility
and portability interfaces are also included in Agar-Core.

Agar is entirely thread-safe when built with thread support. See the
AG_Threads(3) manual page for important threads-related conventions used
in the API reference.

Documentation
-------------
- The Agar Manual, available online at:
  http://wiki.libagar.org/Manual/.
- The API Reference. This is a detailed, systematic description of all
  public Agar objects, structures and functions. On Unix-like systems, the
  API reference is installed in standard manual page (mdoc) format. It is
  also available in offline HTML format, and online at:
  http://libagar.org/man3
- The Agar Wiki (user-contributed tutorials, code snippets, etc.), at:
  http://wiki.libagar.org/

Availability
------------
Download the most recent Agar version from the Agar home page at:
http://libagar.org/download.html.

Portability
-----------
Agar is portable to many different platforms, including FreeBSD, IRIX,
Linux, MacOS Classic, MacOS X, NetBSD, OpenBSD, Solaris and Windows. It
has even been ported to various consoles such as the GP2x, Nintendo
Gamecube/Wii, Sony Playstation2 and Nintendo DS. For the list of official
ports, see: http://libagar.org/portable.html.

License
-------
Agar is freely distributable under the terms the "new" BSD license:
http://libagar.org/license.html.

How to contribute
-----------------
See: http://libagar.org/contribute.html.

Other libraries based on Agar
-----------------------------
There are a number of useful libraries based on Agar. Some of them are
bundled with this source distribution (Agar-VG, etc), but you will need
to explicitely link your application against them in order to use them.

Agar-MATH	General-purpose math library (bundled, use `agar-math-config`)
Agar-VG		Vector graphics library (bundled, use `agar-vg-config`)
Agar-RG		Raster graphics library (bundled, use `agar-rg-config`)
Agar-DEV	Developer/debugging tools (bundled, use `agar-dev-config`)
FreeSG		2D/3D graphics engine (http://freesg.org/)
Edacious	Electronics design (http://edacious.org/)
CADTools	Computer-aided design (http://cadtools.hypertriton.com/)

