# Public domain

REGISTER("--enable-static",	"Produce a static binary [default: no]")
REGISTER("--enable-warnings",	"Suggested compiler warnings [default: no]")

HDEFINE(VERSION, "1.1")
HDEFINE(RELEASE, "The Ecstatic Spiral to Hell")

C_DEFINE(_USE_AGAR_QUEUE)
C_DEFINE(_USE_AGAR_STD)

CHECK(cc)
CHECK(getopt)

CHECK(pthreads)
CHECK(sdl)
CHECK(opengl)
CHECK(freetype)

CHECK(agar, 1.3)
CHECK(agar-vg, 1.3)
CHECK(agar-rg, 1.3)
CHECK(agar-map, 1.3)
CHECK(agar-dev, 1.3)

if [ "${HAVE_AGAR}" != "yes" ]; then
	echo "This application requires Agar."
	exit 1
fi
if [ "${HAVE_AGAR_VG}" != "yes" ]; then
	echo "This application requires Agar-VG."
	exit 1
fi
if [ "${HAVE_AGAR_RG}" != "yes" ]; then
	echo "This application requires Agar-RG."
	exit 1
fi
if [ "${HAVE_AGAR_MAP}" != "yes" ]; then
	echo "This application requires Agar-MAP."
	exit 1
fi

MDEFINE(SHAREDIR, "\${PREFIX}/share/agarpaint")
HDEFINE(SHAREDIR, "$PREFIX/share/agarpaint")
MDEFINE(CFLAGS, "$CFLAGS -I$SRC")

C_INCDIR($SRC)
C_NO_SECURE_WARNINGS()

if [ "${enable_warnings}" = "yes" ]; then
	C_OPTION(-Wall)
	C_OPTION(-Werror)
	C_OPTION(-Wmissing-prototypes)
fi
if [ "${enable_static}" = "yes" ]; then
	MDEFINE(LDFLAGS, "-static")
fi

# Enable NLS if requested explicitely.
if [ "${enable_nls}" = "yes" ]; then
	CHECK(gettext)
	if [ "${HAVE_GETTEXT}" != "yes" ]; then
		echo "*"
		echo "* --enable-nls was given but gettext was not found. Try"
		echo "* running configure again without this option."
		echo "*"
		exit 1
	fi
fi
