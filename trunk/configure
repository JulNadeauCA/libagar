#!/bin/sh
#
# Do not edit!
# File generated from configure.in by csoft-mk 1.7.
#
# Copyright (c) 2001, 2002, 2003 CubeSoft Communications, Inc.
# <http://www.csoft.org>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
# USE OF THIS SOFTWARE EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

optarg=
for arg
do
	case "$arg" in
	-*=*)
	    optarg=`echo "$arg" | sed 's/[-_a-zA-Z0-9]*=//'`
	    ;;
	*)
	    optarg=
	    ;;
	esac

	case "$arg" in
	--prefix=*)
	    prefix=$optarg
	    ;;
	--enable-*)
	    option=`echo $arg | sed -e 's/--enable-//' -e 's/=.*//'`
	    option=`echo $option | sed 's/-/_/g'`
	    case "$option" in
	        *=*)
	            eval "enable_${option}='$optarg'"
		    ;;
		*)
	            eval "enable_${option}=yes"
		    ;;
	    esac
	    ;;
	--disable-*)
	    option=`echo $arg | sed -e 's/--disable-//'`;
	    option=`echo $option | sed 's/-/_/g'`
	    eval "enable_${option}=no"
	    ;;
	--with-*)
	    option=`echo $arg | sed -e 's/--with-//' -e 's/=.*//'`
	    option=`echo $option | sed 's/-/_/g'`
	    case "$option" in
	        *=*)
	            eval "with_${option}='$optarg'"
		    ;;
		*)
	            eval "with_${option}=yes"
		    ;;
	    esac
	    ;;
	--without-*)
	    option=`echo $arg | sed -e 's/--without-//'`;
	    option=`echo $option | sed 's/-/_/g'`
	    eval "with_${option}=no"
	    ;;
	--help)
	    help=yes
	    ;;
	--srcdir=*)
	    srcdir=$optarg
	    ;;
	*)
	    echo "invalid argument: $arg"
	    echo "try ./configure --help"
	    exit 1
	    ;;
	esac
done
if [ "${prefix}" != "" ]; then
    PREFIX=$prefix
else
    PREFIX=/usr/local
fi

if [ "${srcdir}" != "" ]; then
	echo "concurrent build (source in ${srcdir})"
#	if [ ! -e "${srcdir}" ]; then
#		echo "Cannot find source directory: ${srcdir}"
#		exit 1
#	fi
#	if [ ! -e "${srcdir}/configure.in" ]; then
#		echo "Invalid source directory: ${srcdir}"
#		exit 1
#	fi
#	if [ -e "${srcdir}/config" ]; then
#		echo "Source directory is already configured: ${srcdir}"
#		exit 1
#	fi
	SRC=${srcdir}

	perl ${SRC}/mk/mkconcurrent.pl ${SRC}
else
#	if [ ! -e "configure.in" ]; then
#		echo "Missing --srcdir argument"
#		exit 1
#	fi
	SRC=`pwd`
fi

MACHINE=`uname -m 2>/dev/null` || MACHINE=unknown
RELEASE=`uname -r 2>/dev/null` || RELEASE=unknown
SYSTEM=`uname -s 2>/dev/null` || SYSTEM=unknown
HOST="$SYSTEM-$RELEASE-$MACHINE"
echo "Host: $HOST"

echo > Makefile.config
echo "Host: $HOST" > config.log
mkdir config 1>/dev/null 2>&1
echo "Usage: ./configure [args]"
echo "    --prefix                       Installation prefix [/usr/local]"
echo "    --srcdir                       Source tree for concurrent builds [.]"
echo "    --help                         Display this message"
exit 1
if [ "${with_x11}" != "no" ]
 then
else
fi
if [ "${with_gl}" != "no" ]
 then
	if [ "${HAVE_OPENGL}" = "yes" ]
 then
	fi
else
fi
if [ "${with_jpeg}" != "no" ]
 then
else
fi
if [ "${with_smpeg}" != "no" ]
 then
else
fi
if [ "${enable_static}" = "yes" ]
 then
fi
if [ "${enable_debug}" != "no" ]
 then
else
fi
if [ "${enable_threads}" = "yes" ]
 then
else
fi
if [ "${enable_floating_point}" != "no" ]
 then
else
fi
if [ "${enable_edition}" != "no" ]
 then
else
fi
if [ "${enable_8bpp}" != "no" ]
 then
else
fi
if [ "${enable_16bpp}" != "no" ]
 then
else
fi
if [ "${enable_24bpp}" != "no" ]
 then
else
fi
if [ "${enable_32bpp}" != "no" ]
 then
else
fi
if [ "${with_gettext}" != "no" ]
 then
else
fi
if [ "${enable_nls}" != "no" ]
 then
else
fi
echo "#ifndef PREFIX" > /prefix.h
echo "#define PREFIX \"$PREFIX\"" >> /prefix.h
echo "#endif /* PREFIX */" >> /prefix.h
echo "Don't forget to run \"make depend\"."
echo "Don't forget to run \"make depend\"." >> config.log
