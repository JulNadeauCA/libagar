#!/bin/sh
#
# Do not edit!
# File generated from configure.in by csoft-mk 1.5.
#
# Copyright (c) 2001, 2002, CubeSoft Communications, Inc. <http://www.csoft.org>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistribution of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Neither the name of CubeSoft Communications, nor the names of
#    its contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
# USE OF THIS SOFTWARE EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

optarg=
for arg; do
	case "$arg" in
	-*=*)
	    optarg=`echo "$arg" | sed 's/[-_a-zA-Z0-9]*=//'`
	    ;;
	*)
	    optarg=
	    ;;
	esac

	case "$arg" in
	--prefix=*)
	    prefix=$optarg
	    ;;
	--enable-*)
	    option=`echo $arg | sed -e 's/--enable-//' -e 's/=.*//'`
	    option=`echo $option | sed 's/-/_/g'`
	    case "$option" in
	        *=*)
	            eval "enable_${option}='$optarg'"
		    ;;
		*)
	            eval "enable_${option}=yes"
		    ;;
	    esac
	    ;;
	--disable-*)
	    option=`echo $arg | sed -e 's/--disable-//'`;
	    option=`echo $option | sed 's/-/_/g'`
	    eval "enable_${option}=no"
	    ;;
	--with-*)
	    option=`echo $arg | sed -e 's/--with-//' -e 's/=.*//'`
	    option=`echo $option | sed 's/-/_/g'`
	    case "$option" in
	        *=*)
	            eval "with_${option}='$optarg'"
		    ;;
		*)
	            eval "with_${option}=yes"
		    ;;
	    esac
	    ;;
	--without-*)
	    option=`echo $arg | sed -e 's/--without-//'`;
	    option=`echo $option | sed 's/-/_/g'`
	    eval "with_${option}=no"
	    ;;
	--help)
	    help=yes
	    ;;
	--srcdir=*)
	    srcdir=$optarg
	    ;;
	*)
	    echo "invalid argument: $arg"
	    echo "try ./configure --help"
	    exit 1
	    ;;
	esac
done
if [ "${prefix}" != "" ]; then
    PREFIX=$prefix
else
    PREFIX=/usr/local
fi

if [ "${srcdir}" != "" ]; then
	echo "concurrent build (source in ${srcdir})"
	if [ ! -e "${srcdir}" ]; then
		echo "Cannot find source directory: ${srcdir}"
		exit 1
	fi
	if [ ! -e "${srcdir}/configure.in" ]; then
		echo "Invalid source directory: ${srcdir}"
		exit 1
	fi
	SRC=${srcdir}

	perl ${SRC}/mk/mkconcurrent.pl ${SRC}
else
	if [ ! -e "configure.in" ]; then
		echo "Missing --srcdir argument"
		exit 1
	fi
	SRC=`pwd`
fi

MACHINE=`uname -m 2>/dev/null` || MACHINE=unknown
RELEASE=`uname -r 2>/dev/null` || RELEASE=unknown
SYSTEM=`uname -s 2>/dev/null` || SYSTEM=unknown
HOST="$SYSTEM-$RELEASE-$MACHINE"

echo "Host: $HOST" > config.log
echo "configuring for $HOST"
echo >Makefile.config
if [ ! -e "config" ]; then
	mkdir config
	if [ $? != 0 ]; then
		exit 1
	fi
fi
if [ "${help}" = "yes" ]
 then
echo "Usage: ./configure [args]"
echo "    --prefix                       Installation prefix [/usr/local]"
echo "    --srcdir                       Source tree for concurrent builds [.]"
echo "    --with-smpeg                   Play videos through smpeg [default: check]"
echo "    --with-x11                     X11-specific code [default: check]"
echo "    --with-gl                      Support OpenGL operations [default: check]"
echo "    --enable-debug                 Engine debugging [default: no]"
echo "    --enable-serialization         Thread-safe engine [default: yes]"
echo "    --enable-8bpp                  Support 8 bpp display [default: yes]"
echo "    --enable-16bpp                 Support 16 bpp display [default: yes]"
echo "    --enable-24bpp                 Support 24 bpp display [default: yes]"
echo "    --enable-32bpp                 Support 32 bpp display [default: yes]"
echo "    --help                         Show this message"
exit 1
fi
SHAREDIR="$PREFIX/share/cave"
echo SHAREDIR=$SHAREDIR >> Makefile.config
SHAREDIR="\"$PREFIX/share/cave\""
echo "#ifndef SHAREDIR" > config/sharedir.h
echo "#define SHAREDIR" $SHAREDIR >> config/sharedir.h
echo "#endif /* SHAREDIR */" >> config/sharedir.h
MAPDIR="$PREFIX/share/cave/map"
echo MAPDIR=$MAPDIR >> Makefile.config
TTFDIR="$PREFIX/share/cave/ttf"
echo TTFDIR=$TTFDIR >> Makefile.config
FOBJDIR="$PREFIX/share/cave/fob"
echo FOBJDIR=$FOBJDIR >> Makefile.config
INST_MANDIR="$PREFIX/share/agar/man"
echo INST_MANDIR=$INST_MANDIR >> Makefile.config
echo -n "checking for a usable make(1)..."
echo -n "checking for a usable make(1)..." >> config.log
echo "checking for a usable make(1)..." >> config.log
if [ "$MAKE" = "" ]; then
	for i in `echo $PATH |sed 's/:/ /g'`; do
		if [ -x "${i}/make" ]; then
			MAKE="${i}/make"
		elif [ -x "${i}/make" ]; then
			MAKE="${i}/make"
		fi
	done
fi

cat << 'EOT' > .maketest
ASSIGN= foo
ASSIGN?= foo
ASSIGN+= bar

all: write-test

write-test:
	@echo > .maketest2

.BEGIN:
	@echo -n

TOP=	.
include ${TOP}/.maketest3
EOT

echo >> .maketest3

echo "$MAKE -f .maketest" >>config.log
$MAKE -f .maketest 2>>config.log
if [ $? != 0 -o ! -e .maketest2 ]; then
    echo "-> failure" >> config.log
    echo "no"
    exit 1
else
    echo "yes"
    echo "-> success" >> config.log
fi
rm -f .maketest .maketest2 .maketest3
echo -n "checking for a usable C compiler..."
echo -n "checking for a usable C compiler..." >> config.log
echo "checking for a usable C compiler..." >> config.log
if [ "$CC" = "" ]; then
	for i in `echo $PATH |sed 's/:/ /g'`; do
		if [ -x "${i}/cc" ]; then
			CC="${i}/cc"
		elif [ -x "${i}/gcc" ]; then
			CC="${i}/gcc"
		fi
	done
	if [ "$CC" = "" ]; then
		echo "Could not find a C compiler, try setting CC."
		exit 1
	fi
fi

cat << 'EOT' > .cctest.c
int
main(int argc, char *argv[])
{
	#ifdef __GNUC__
	return (0);
#else
	return (1);
#endif
}
EOT

echo "$CC -o .cctest .cctest.c" >>config.log
$CC -o .cctest .cctest.c 2>>config.log
if [ $? != 0 -o ! -e .cctest ]; then
    echo "-> failure" >> config.log
    echo "no"
    exit 1
fi

cc_is_gcc=no
if ./.cctest; then
    cc_is_gcc=yes
    echo "-> success: gcc" >> config.log
    echo "yes"
else
    echo "yes"
    echo "-> success" >> config.log
fi

rm -f .cctest .cctest.c
echo -n "checking for IEEE 754 floating point..."
echo -n "checking for IEEE 754 floating point..." >> config.log
cat << EOT > conftest.c
#include <stdio.h>

int
main(int argc, char *argv[])
{
	float f = 1.5;
	double d = 2.5;

	printf("%f %d\n", f, d);
	return (0);
}

EOT
compile="ok"
echo "$CC -o conftest conftest.c" >> config.log
$CC -o conftest conftest.c 2>>config.log
if [ $? != 0 ]; then
	echo "-> failed: non-zero exit status" >> config.log
	compile="failed"
else
    if [ ! -e "conftest" ]; then
	    echo "-> failed: compiler did not produce an executable" >> config.log
	    compile="failed"
    fi
fi
rm -f conftest conftest.c
if [ "${compile}" = "ok" ]; then
	echo "-> success" >> config.log
	echo "#ifndef HAVE_IEEE754" > config/have_ieee754.h
echo "#define HAVE_IEEE754" $HAVE_IEEE754 >> config/have_ieee754.h
echo "#endif /* HAVE_IEEE754 */" >> config/have_ieee754.h

	echo "yes"
else
    echo "#undef HAVE_IEEE754" > config/have_ieee754.h

	echo "no"
fi
echo -n "checking for long double..."
echo -n "checking for long double..." >> config.log
cat << EOT > conftest.c
int
main(int argc, char *argv[])
{
	long double ld = 0.1;
	
	printf("%Lf\n", ld);
	return (0);
}

EOT
compile="ok"
echo "$CC -o conftest conftest.c" >> config.log
$CC -o conftest conftest.c 2>>config.log
if [ $? != 0 ]; then
	echo "-> failed: non-zero exit status" >> config.log
	compile="failed"
else
    if [ ! -e "conftest" ]; then
	    echo "-> failed: compiler did not produce an executable" >> config.log
	    compile="failed"
    fi
fi
rm -f conftest conftest.c
if [ "${compile}" = "ok" ]; then
	echo "-> success" >> config.log
	echo "#ifndef HAVE_LONG_DOUBLE" > config/have_long_double.h
echo "#define HAVE_LONG_DOUBLE" $HAVE_LONG_DOUBLE >> config/have_long_double.h
echo "#endif /* HAVE_LONG_DOUBLE */" >> config/have_long_double.h

	echo "yes"
else
    echo "#undef HAVE_LONG_DOUBLE" > config/have_long_double.h

	echo "no"
fi
echo -n "checking for BSD-style __progname..."
echo -n "checking for BSD-style __progname..." >> config.log
echo "checking for BSD-style __progname..." >> config.log
cat << EOT > conftest.c
#include <stdio.h>
int
main(int argc, char *argv[])
{
	extern char *__progname;
	printf("%s\n", __progname);
	return (0);
}

EOT
compile="ok"
echo "$CC -o conftest conftest.c" >> config.log
$CC -o conftest conftest.c 2>>config.log
if [ $? != 0 ]; then
	echo "-> failed: non-zero exit status" >> config.log
	compile="failed"
else
    if [ ! -e "conftest" ]; then
	    echo "-> failed: compiler did not produce an executable" >> config.log
	    compile="failed"
    fi
fi
rm -f conftest conftest.c
if [ "${compile}" = "ok" ]; then
	echo "-> success" >> config.log
	echo "#ifndef HAVE_PROGNAME" > config/have_progname.h
echo "#define HAVE_PROGNAME" $HAVE_PROGNAME >> config/have_progname.h
echo "#endif /* HAVE_PROGNAME */" >> config/have_progname.h

	echo "yes"
else
    echo "#undef HAVE_PROGNAME" > config/have_progname.h

	echo "no"
fi
echo -n "checking for the C math library..."
echo -n "checking for the C math library..." >> config.log
echo "checking for the C math library..." >> config.log
MATH_LIBS=-lm
cat << EOT > conftest.c
#include <math.h>

int
main(int argc, char *argv[])
{
	float f = 1.0;
	double d = 1.0;

	d = fabs(d);
	f = fabsf(f);
	return (0);
}

EOT
compile="ok"
echo $CC ${CFLAGS} -o conftest conftest.c ${MATH_LIBS} >> config.log
$CC ${CFLAGS} -o conftest conftest.c ${MATH_LIBS} 2>>config.log
if [ $? != 0 ]; then
	echo "-> failed: compiler had non-zero exit status" >> config.log
	compile="failed"
fi
if [ ! -e "conftest" ]; then
	echo "-> failed: compiler did not produce an executable" >> config.log
	compile="failed"
fi
rm -f conftest conftest.c
if [ "${compile}" = "ok" ]; then
	echo "-> success" >> config.log
	echo "#ifndef HAVE_MATH" > config/have_math.h
echo "#define HAVE_MATH" $HAVE_MATH >> config/have_math.h
echo "#endif /* HAVE_MATH */" >> config/have_math.h

	HAVE_MATH=yes

	echo "yes"
else
	echo "#undef HAVE_MATH" > config/have_math.h

	echo "no"
fi
if [ "${HAVE_MATH}" = "yes" ]; then
echo MATH_LIBS=$MATH_LIBS >> Makefile.config
else
NONE=1
fi
echo -n "checking for a getenv() function..."
echo -n "checking for a getenv() function..." >> config.log
echo "checking for a getenv() function..." >> config.log
cat << EOT > conftest.c
#include <stdlib.h>
int
main(int argc, char *argv[])
{
	(void)getenv("PATH");
	return (0);
}

EOT
compile="ok"
echo "$CC -o conftest conftest.c" >> config.log
$CC -o conftest conftest.c 2>>config.log
if [ $? != 0 ]; then
	echo "-> failed: non-zero exit status" >> config.log
	compile="failed"
else
    if [ ! -e "conftest" ]; then
	    echo "-> failed: compiler did not produce an executable" >> config.log
	    compile="failed"
    fi
fi
rm -f conftest conftest.c
if [ "${compile}" = "ok" ]; then
	echo "-> success" >> config.log
	echo "#ifndef HAVE_GETENV" > config/have_getenv.h
echo "#define HAVE_GETENV" $HAVE_GETENV >> config/have_getenv.h
echo "#endif /* HAVE_GETENV */" >> config/have_getenv.h

	echo "yes"
else
    echo "#undef HAVE_GETENV" > config/have_getenv.h

	echo "no"
fi
echo -n "checking for setenv() and unsetenv() functions..."
echo -n "checking for setenv() and unsetenv() functions..." >> config.log
echo "checking for setenv() and unsetenv() functions..." >> config.log
cat << EOT > conftest.c
#include <stdlib.h>
int
main(int argc, char *argv[])
{
	(void)setenv("MANUCONF_SETENV_TEST", "foo", 1);
	unsetenv("MANUCONF_SETENV_TEST");

	return (0);
}

EOT
compile="ok"
echo "$CC -o conftest conftest.c" >> config.log
$CC -o conftest conftest.c 2>>config.log
if [ $? != 0 ]; then
	echo "-> failed: non-zero exit status" >> config.log
	compile="failed"
else
    if [ ! -e "conftest" ]; then
	    echo "-> failed: compiler did not produce an executable" >> config.log
	    compile="failed"
    fi
fi
rm -f conftest conftest.c
if [ "${compile}" = "ok" ]; then
	echo "-> success" >> config.log
	echo "#ifndef HAVE_SETENV" > config/have_setenv.h
echo "#define HAVE_SETENV" $HAVE_SETENV >> config/have_setenv.h
echo "#endif /* HAVE_SETENV */" >> config/have_setenv.h

	echo "yes"
else
    echo "#undef HAVE_SETENV" > config/have_setenv.h

	echo "no"
fi
echo -n "checking for a strsep() function..."
echo -n "checking for a strsep() function..." >> config.log
echo "checking for a strsep() function..." >> config.log
cat << EOT > conftest.c
#include <string.h>
int
main(int argc, char *argv[])
{
	(void)strsep(NULL, NULL);
	return (0);
}

EOT
compile="ok"
echo "$CC -o conftest conftest.c" >> config.log
$CC -o conftest conftest.c 2>>config.log
if [ $? != 0 ]; then
	echo "-> failed: non-zero exit status" >> config.log
	compile="failed"
else
    if [ ! -e "conftest" ]; then
	    echo "-> failed: compiler did not produce an executable" >> config.log
	    compile="failed"
    fi
fi
rm -f conftest conftest.c
if [ "${compile}" = "ok" ]; then
	echo "-> success" >> config.log
	echo "#ifndef HAVE_STRSEP" > config/have_strsep.h
echo "#define HAVE_STRSEP" $HAVE_STRSEP >> config/have_strsep.h
echo "#endif /* HAVE_STRSEP */" >> config/have_strsep.h

	echo "yes"
else
    echo "#undef HAVE_STRSEP" > config/have_strsep.h

	echo "no"
fi
echo -n "checking for a strlcat() function..."
echo -n "checking for a strlcat() function..." >> config.log
echo "checking for a strlcat() function..." >> config.log
cat << EOT > conftest.c
#include <string.h>
int
main(int argc, char *argv[])
{
	(void)strlcat(NULL, NULL, 0);
	return (0);
}

EOT
compile="ok"
echo "$CC -o conftest conftest.c" >> config.log
$CC -o conftest conftest.c 2>>config.log
if [ $? != 0 ]; then
	echo "-> failed: non-zero exit status" >> config.log
	compile="failed"
else
    if [ ! -e "conftest" ]; then
	    echo "-> failed: compiler did not produce an executable" >> config.log
	    compile="failed"
    fi
fi
rm -f conftest conftest.c
if [ "${compile}" = "ok" ]; then
	echo "-> success" >> config.log
	echo "#ifndef HAVE_STRLCAT" > config/have_strlcat.h
echo "#define HAVE_STRLCAT" $HAVE_STRLCAT >> config/have_strlcat.h
echo "#endif /* HAVE_STRLCAT */" >> config/have_strlcat.h

	echo "yes"
else
    echo "#undef HAVE_STRLCAT" > config/have_strlcat.h

	echo "no"
fi
echo -n "checking for a strlcpy() function..."
echo -n "checking for a strlcpy() function..." >> config.log
echo "checking for a strlcpy() function..." >> config.log
cat << EOT > conftest.c
#include <string.h>
int
main(int argc, char *argv[])
{
	(void)strlcpy(NULL, NULL, 0);
	return (0);
}

EOT
compile="ok"
echo "$CC -o conftest conftest.c" >> config.log
$CC -o conftest conftest.c 2>>config.log
if [ $? != 0 ]; then
	echo "-> failed: non-zero exit status" >> config.log
	compile="failed"
else
    if [ ! -e "conftest" ]; then
	    echo "-> failed: compiler did not produce an executable" >> config.log
	    compile="failed"
    fi
fi
rm -f conftest conftest.c
if [ "${compile}" = "ok" ]; then
	echo "-> success" >> config.log
	echo "#ifndef HAVE_STRLCPY" > config/have_strlcpy.h
echo "#define HAVE_STRLCPY" $HAVE_STRLCPY >> config/have_strlcpy.h
echo "#endif /* HAVE_STRLCPY */" >> config/have_strlcpy.h

	echo "yes"
else
    echo "#undef HAVE_STRLCPY" > config/have_strlcpy.h

	echo "no"
fi
echo -n "checking for an asprintf() function..."
echo -n "checking for an asprintf() function..." >> config.log
echo "checking for an asprintf() function..." >> config.log
cat << EOT > conftest.c
#include <stdio.h>

int
main(int argc, char *argv[])
{
	char *buf;

	if (asprintf(&buf, "foo %s", "bar") == 0) {
		free(buf);
	    return (0);
	}
	return (1);
}

EOT
compile="ok"
echo "$CC -o conftest conftest.c" >> config.log
$CC -o conftest conftest.c 2>>config.log
if [ $? != 0 ]; then
	echo "-> failed: non-zero exit status" >> config.log
	compile="failed"
else
    if [ ! -e "conftest" ]; then
	    echo "-> failed: compiler did not produce an executable" >> config.log
	    compile="failed"
    fi
fi
rm -f conftest conftest.c
if [ "${compile}" = "ok" ]; then
	echo "-> success" >> config.log
	echo "#ifndef HAVE_ASPRINTF" > config/have_asprintf.h
echo "#define HAVE_ASPRINTF" $HAVE_ASPRINTF >> config/have_asprintf.h
echo "#endif /* HAVE_ASPRINTF */" >> config/have_asprintf.h

	echo "yes"
else
    echo "#undef HAVE_ASPRINTF" > config/have_asprintf.h

	echo "no"
fi
echo -n "checking for a vasprintf() function..."
echo -n "checking for a vasprintf() function..." >> config.log
echo "checking for a vasprintf() function..." >> config.log
cat << EOT > conftest.c
#include <stdio.h>
#include <stdarg.h>

int
testprintf(const char *fmt, ...)
{
	va_list args;
	char *buf;

	va_start(args, fmt);
	if (vasprintf(&buf, "%s", args) == -1) {
		return (-1);
	}
	va_end(args);

	free(buf);
	return (0);
}

int
main(int argc, char *argv[])
{
	return (testprintf("foo %s", "bar"));
}

EOT
compile="ok"
echo "$CC -o conftest conftest.c" >> config.log
$CC -o conftest conftest.c 2>>config.log
if [ $? != 0 ]; then
	echo "-> failed: non-zero exit status" >> config.log
	compile="failed"
else
    if [ ! -e "conftest" ]; then
	    echo "-> failed: compiler did not produce an executable" >> config.log
	    compile="failed"
    fi
fi
rm -f conftest conftest.c
if [ "${compile}" = "ok" ]; then
	echo "-> success" >> config.log
	echo "#ifndef HAVE_VASPRINTF" > config/have_vasprintf.h
echo "#define HAVE_VASPRINTF" $HAVE_VASPRINTF >> config/have_vasprintf.h
echo "#endif /* HAVE_VASPRINTF */" >> config/have_vasprintf.h

	echo "yes"
else
    echo "#undef HAVE_VASPRINTF" > config/have_vasprintf.h

	echo "no"
fi
CFLAGS="$CFLAGS -I$SRC"
echo CFLAGS=$CFLAGS >> Makefile.config
if [ "${cc_is_gcc}" = "yes" ]
 then
CFLAGS="$CFLAGS -Wall -Werror -Wmissing-prototypes -Wno-unused"
echo CFLAGS=$CFLAGS >> Makefile.config
fi
echo -n "checking for SDL (http://www.libsdl.org)..."
echo -n "checking for SDL (http://www.libsdl.org)..." >> config.log
echo "checking for SDL (http://www.libsdl.org)..." >> config.log
sdl_version=""
for path in `echo $PATH | sed 's/:/ /g'`; do
	if [ -x "${path}/sdl-config" ]; then
		sdl_version=`${path}/sdl-config --version`
	fi
done
SDL_CFLAGS=""
for path in `echo $PATH | sed 's/:/ /g'`; do
	if [ -x "${path}/sdl-config" ]; then
		SDL_CFLAGS=`${path}/sdl-config --cflags`
	fi
done
SDL_LIBS=""
for path in `echo $PATH | sed 's/:/ /g'`; do
	if [ -x "${path}/sdl-config" ]; then
		SDL_LIBS=`${path}/sdl-config --static-libs`
	fi
done
sdl11_version=""
for path in `echo $PATH | sed 's/:/ /g'`; do
	if [ -x "${path}/sdl11-config" ]; then
		sdl11_version=`${path}/sdl11-config --version`
	fi
done
sdl11_cflags=""
for path in `echo $PATH | sed 's/:/ /g'`; do
	if [ -x "${path}/sdl11-config" ]; then
		sdl11_cflags=`${path}/sdl11-config --cflags`
	fi
done
sdl11_libs=""
for path in `echo $PATH | sed 's/:/ /g'`; do
	if [ -x "${path}/sdl11-config" ]; then
		sdl11_libs=`${path}/sdl11-config --static-libs`
	fi
done
if [ "${sdl_version}" != "" ]; then
sdl_found=yes
echo SDL_CFLAGS=$SDL_CFLAGS >> Makefile.config
echo SDL_LIBS=$SDL_LIBS >> Makefile.config
else
NONE=1
fi
if [ "${sdl11_version}" != "" ]; then
sdl_found=yes
SDL_CFLAGS=$sdl11_cflags
SDL_LIBS=$sdl11_libs
echo SDL_CFLAGS=$SDL_CFLAGS >> Makefile.config
echo SDL_LIBS=$SDL_LIBS >> Makefile.config
else
NONE=1
fi
if [ "${sdl_found}" = "yes" ]; then
echo "ok"
echo "ok" >> config.log
else
echo "Could not find the SDL library. Make sure sdl-config is in your $PATH.Make sure sdl-config is in $PATH."
exit 1
fi
echo -n "checking whether SDL works..."
echo -n "checking whether SDL works..." >> config.log
cat << EOT > conftest.c

#include <stdio.h>

#include <SDL.h>

int
main(int argc, char *argv[])
{
	SDL_Surface su;
	SDL_TimerID tid;
	SDL_Color color;
	SDL_Event event;
	Uint8 u8;
	Uint16 u16;
	Uint32 u32;
	Sint8 s8;
	Sint16 s16;
	Sint32 s32;

	if (SDL_Init(SDL_INIT_TIMER|SDL_INIT_NOPARACHUTE) != 0) {
		return (1);
	}
	SDL_Quit();
	return (0);
}


EOT
compile="ok"
echo $CC ${SDL_CFLAGS} -o conftest conftest.c ${SDL_LIBS} >> config.log
$CC ${SDL_CFLAGS} -o conftest conftest.c ${SDL_LIBS} 2>>config.log
if [ $? != 0 ]; then
	echo "-> failed: compiler had non-zero exit status" >> config.log
	compile="failed"
fi
if [ ! -e "conftest" ]; then
	echo "-> failed: compiler did not produce an executable" >> config.log
	compile="failed"
fi
rm -f conftest conftest.c
if [ "${compile}" = "ok" ]; then
	echo "-> success" >> config.log
	echo "#ifndef HAVE_SDL" > config/have_sdl.h
echo "#define HAVE_SDL" $HAVE_SDL >> config/have_sdl.h
echo "#endif /* HAVE_SDL */" >> config/have_sdl.h

	HAVE_SDL=yes

	echo "yes"
else
	echo "#undef HAVE_SDL" > config/have_sdl.h

	echo "no"
fi
if [ "${HAVE_SDL}" = "yes" ]; then
NONE=1
else
echo "The SDL test would not compile."
exit 1
fi
echo -n "checking for FreeType (http://www.freetype.org)..."
echo -n "checking for FreeType (http://www.freetype.org)..." >> config.log
echo "checking for FreeType (http://www.freetype.org)..." >> config.log
FREETYPE_VERSION=""
for path in `echo $PATH | sed 's/:/ /g'`; do
	if [ -x "${path}/freetype-config" ]; then
		FREETYPE_VERSION=`${path}/freetype-config --version`
	fi
done
FREETYPE_CFLAGS=""
for path in `echo $PATH | sed 's/:/ /g'`; do
	if [ -x "${path}/freetype-config" ]; then
		FREETYPE_CFLAGS=`${path}/freetype-config --cflags`
	fi
done
FREETYPE_LIBS=""
for path in `echo $PATH | sed 's/:/ /g'`; do
	if [ -x "${path}/freetype-config" ]; then
		FREETYPE_LIBS=`${path}/freetype-config --libs`
	fi
done
if [ -d /usr/freeware/include ]; then
FREETYPE_CFLAGS="${FREETYPE_CFLAGS} -I/usr/freeware/include"
else
NONE=1
fi
if [ "${FREETYPE_VERSION}" != "" ]; then
freetype_found=yes
echo FREETYPE_CFLAGS=$FREETYPE_CFLAGS >> Makefile.config
echo FREETYPE_LIBS=$FREETYPE_LIBS >> Makefile.config
echo "yes"
echo "yes" >> config.log
else
echo "Cannot find FreeType. Make sure freetype-config is in your $PATH."
exit 1
fi
echo -n "checking whether FreeType works..."
echo -n "checking whether FreeType works..." >> config.log
cat << EOT > conftest.c
#include <stdio.h>

#include <freetype/freetype.h>
#include <freetype/ftoutln.h>

int
main(int argc, char *argv[])
{
	FT_UInt uint;
	FT_Bitmap bitmap;
	FT_Face face;
	FT_Library library;

	FT_Init_FreeType(&library);
	return (0);
}

EOT
compile="ok"
echo $CC ${FREETYPE_CFLAGS} -o conftest conftest.c ${FREETYPE_LIBS} >> config.log
$CC ${FREETYPE_CFLAGS} -o conftest conftest.c ${FREETYPE_LIBS} 2>>config.log
if [ $? != 0 ]; then
	echo "-> failed: compiler had non-zero exit status" >> config.log
	compile="failed"
fi
if [ ! -e "conftest" ]; then
	echo "-> failed: compiler did not produce an executable" >> config.log
	compile="failed"
fi
rm -f conftest conftest.c
if [ "${compile}" = "ok" ]; then
	echo "-> success" >> config.log
	echo "#ifndef HAVE_FREETYPE" > config/have_freetype.h
echo "#define HAVE_FREETYPE" $HAVE_FREETYPE >> config/have_freetype.h
echo "#endif /* HAVE_FREETYPE */" >> config/have_freetype.h

	HAVE_FREETYPE=yes

	echo "yes"
else
	echo "#undef HAVE_FREETYPE" > config/have_freetype.h

	echo "no"
fi
if [ "${HAVE_FREETYPE}" = "yes" ]; then
NONE=1
else
echo "The FreeType test would not compile."
exit 1
fi
if [ "${with_x11}" != "no" ]
 then
echo -n "checking for the X window system..."
echo -n "checking for the X window system..." >> config.log
echo "checking for the X window system..." >> config.log
x11_found_includes=no
x11_found_libs=no
if [ -d /usr/include/X11/X11 ]; then
X11_CFLAGS="-I/usr/include/X11"
x11_found_includes=yes
else
NONE=1
fi
if [ -d /usr/include/X11R6/X11 ]; then
X11_CFLAGS="-I/usr/include/X11R6"
x11_found_includes=yes
else
NONE=1
fi
if [ -d /usr/local/X11/include/X11 ]; then
X11_CFLAGS="-I/usr/local/X11/include"
x11_found_includes=yes
else
NONE=1
fi
if [ -d /usr/local/X11R6/include/X11 ]; then
X11_CFLAGS="-I/usr/local/X11R6/include"
x11_found_includes=yes
else
NONE=1
fi
if [ -d /usr/local/include/X11/X11 ]; then
X11_CFLAGS="-I/usr/local/include/X11"
x11_found_includes=yes
else
NONE=1
fi
if [ -d /usr/local/include/X11R6/X11 ]; then
X11_CFLAGS="-I/usr/local/include/X11R6"
x11_found_includes=yes
else
NONE=1
fi
if [ -d /usr/X11/include/X11 ]; then
X11_CFLAGS="-I/usr/X11/include"
x11_found_includes=yes
else
NONE=1
fi
if [ -d /usr/X11R6/include/X11 ]; then
X11_CFLAGS="-I/usr/X11R6/include"
x11_found_includes=yes
else
NONE=1
fi
if [ -d /usr/local/X11/lib ]; then
X11_LIBS="-L/usr/local/X11/lib"
x11_found_libs=yes
else
NONE=1
fi
if [ -d /usr/local/X11R6/lib ]; then
X11_LIBS="-L/usr/local/X11R6/lib"
x11_found_libs=yes
else
NONE=1
fi
if [ -d /usr/X11/lib ]; then
X11_LIBS="-L/usr/X11/lib"
x11_found_libs=yes
else
NONE=1
fi
if [ -d /usr/X11R6/lib ]; then
X11_LIBS="-L/usr/X11R6/lib"
x11_found_libs=yes
else
NONE=1
fi
cat << EOT > conftest.c
#include <X11/Xlib.h>

int
main(int argc, char *argv[])
{
	Display *disp;

	disp = XOpenDisplay(NULL);
	XCloseDisplay(disp);
	return (0);
}

EOT
compile="ok"
echo $CC ${X11_CFLAGS} -o conftest conftest.c ${X11_LIBS} >> config.log
$CC ${X11_CFLAGS} -o conftest conftest.c ${X11_LIBS} 2>>config.log
if [ $? != 0 ]; then
	echo "-> failed: compiler had non-zero exit status" >> config.log
	compile="failed"
fi
if [ ! -e "conftest" ]; then
	echo "-> failed: compiler did not produce an executable" >> config.log
	compile="failed"
fi
rm -f conftest conftest.c
if [ "${compile}" = "ok" ]; then
	echo "-> success" >> config.log
	echo "#ifndef HAVE_X11" > config/have_x11.h
echo "#define HAVE_X11" $HAVE_X11 >> config/have_x11.h
echo "#endif /* HAVE_X11 */" >> config/have_x11.h

	HAVE_X11=yes

	echo "yes"
else
	echo "#undef HAVE_X11" > config/have_x11.h

	echo "no"
fi
if [ "${HAVE_X11}" != "" ]; then
x11_found=yes
echo "#ifndef HAVE_X11" > config/have_x11.h
echo "#define HAVE_X11" $HAVE_X11 >> config/have_x11.h
echo "#endif /* HAVE_X11 */" >> config/have_x11.h
echo X11_CFLAGS=$X11_CFLAGS >> Makefile.config
echo X11_LIBS=$X11_LIBS >> Makefile.config
else
x11_found=no
echo "#undef HAVE_X11" > config/have_x11.h
fi
fi
if [ "${with_gl}" != "no" ]
 then
echo -n "checking for OpenGL (http://www.sgi.com/software/opengl)..."
echo -n "checking for OpenGL (http://www.sgi.com/software/opengl)..." >> config.log
echo "checking for OpenGL (http://www.sgi.com/software/opengl)..." >> config.log
OPENGL_CFLAGS="${X11_CFLAGS}"
OPENGL_LIBS="${X11_LIBS} -lGL"
cat << EOT > conftest.c
#include <GL/gl.h>

int
main(int argc, char *argv[])
{
	GLdouble d;

	glFlush();
	return (0);
}

EOT
compile="ok"
echo $CC ${OPENGL_CFLAGS} -o conftest conftest.c ${OPENGL_LIBS} >> config.log
$CC ${OPENGL_CFLAGS} -o conftest conftest.c ${OPENGL_LIBS} 2>>config.log
if [ $? != 0 ]; then
	echo "-> failed: compiler had non-zero exit status" >> config.log
	compile="failed"
fi
if [ ! -e "conftest" ]; then
	echo "-> failed: compiler did not produce an executable" >> config.log
	compile="failed"
fi
rm -f conftest conftest.c
if [ "${compile}" = "ok" ]; then
	echo "-> success" >> config.log
	echo "#ifndef HAVE_OPENGL" > config/have_opengl.h
echo "#define HAVE_OPENGL" $HAVE_OPENGL >> config/have_opengl.h
echo "#endif /* HAVE_OPENGL */" >> config/have_opengl.h

	HAVE_OPENGL=yes

	echo "yes"
else
	echo "#undef HAVE_OPENGL" > config/have_opengl.h

	echo "no"
fi
if [ "${HAVE_OPENGL}" = "yes" ]; then
echo OPENGL_CFLAGS=$OPENGL_CFLAGS >> Makefile.config
echo OPENGL_LIBS=$OPENGL_LIBS >> Makefile.config
else
NONE=1
fi
fi
if [ "${enable_debug}" = "yes" ]
 then
DEBUG=1
echo "#ifndef DEBUG" > config/debug.h
echo "#define DEBUG" $DEBUG >> config/debug.h
echo "#endif /* DEBUG */" >> config/debug.h
LOCKDEBUG=1
echo "#ifndef LOCKDEBUG" > config/lockdebug.h
echo "#define LOCKDEBUG" $LOCKDEBUG >> config/lockdebug.h
echo "#endif /* LOCKDEBUG */" >> config/lockdebug.h
else
echo "#undef DEBUG" > config/debug.h
echo "#undef LOCKDEBUG" > config/lockdebug.h
fi
if [ "${enable_serialization}" != "no" ]
 then
SERIALIZATION=1
echo "#ifndef SERIALIZATION" > config/serialization.h
echo "#define SERIALIZATION" $SERIALIZATION >> config/serialization.h
echo "#endif /* SERIALIZATION */" >> config/serialization.h
else
echo "#undef SERIALIZATION" > config/serialization.h
fi
if [ "${enable_8bpp}" != "no" ]
 then
VIEW_8BPP=1
echo "#ifndef VIEW_8BPP" > config/view_8bpp.h
echo "#define VIEW_8BPP" $VIEW_8BPP >> config/view_8bpp.h
echo "#endif /* VIEW_8BPP */" >> config/view_8bpp.h
else
echo "#undef VIEW_8BPP" > config/view_8bpp.h
fi
if [ "${enable_16bpp}" != "no" ]
 then
VIEW_16BPP=1
echo "#ifndef VIEW_16BPP" > config/view_16bpp.h
echo "#define VIEW_16BPP" $VIEW_16BPP >> config/view_16bpp.h
echo "#endif /* VIEW_16BPP */" >> config/view_16bpp.h
else
echo "#undef VIEW_16BPP" > config/view_16bpp.h
fi
if [ "${enable_24bpp}" != "no" ]
 then
VIEW_24BPP=1
echo "#ifndef VIEW_24BPP" > config/view_24bpp.h
echo "#define VIEW_24BPP" $VIEW_24BPP >> config/view_24bpp.h
echo "#endif /* VIEW_24BPP */" >> config/view_24bpp.h
else
echo "#undef VIEW_24BPP" > config/view_24bpp.h
fi
if [ "${enable_32bpp}" != "no" ]
 then
VIEW_32BPP=1
echo "#ifndef VIEW_32BPP" > config/view_32bpp.h
echo "#define VIEW_32BPP" $VIEW_32BPP >> config/view_32bpp.h
echo "#endif /* VIEW_32BPP */" >> config/view_32bpp.h
else
echo "#undef VIEW_32BPP" > config/view_32bpp.h
fi
echo PREFIX=$PREFIX >> Makefile.config
echo "#ifndef PREFIX" > config/prefix.h
echo "#define PREFIX \"$PREFIX\"" >> config/prefix.h
echo "#endif /* PREFIX */" >> config/prefix.h
echo "Don't forget to run \"make depend\"."
echo "Don't forget to run \"make depend\"." >> config.log
