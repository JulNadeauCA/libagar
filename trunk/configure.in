# $Csoft: configure.in,v 1.50 2002/12/31 07:31:44 vedge Exp $
# Public domain

makeout(Makefile.config);
inclout(config);

register("--with-smpeg",	"Play videos through smpeg [default: check]");
register("--with-x11",		"X11-specific code [default: check]");
register("--with-gl",		"Support OpenGL operations [default: check]");
register("--enable-debug",	"Engine debugging [default: no]");
register("--enable-serialization", "Thread-safe engine [default: yes]");
register("--enable-8bpp",	"Support 8 bpp display [default: yes]");
register("--enable-16bpp",	"Support 16 bpp display [default: yes]");
register("--enable-24bpp",	"Support 24 bpp display [default: yes]");
register("--enable-32bpp",	"Support 32 bpp display [default: yes]");
register("--help",		"Show this message");

if [ "${help}" = "yes" ]; then
	help();
fi

# Define the data directories.
mdefine(SHAREDIR, "$PREFIX/share/cave");
hdefine(SHAREDIR, "\"$PREFIX/share/cave\"");
mdefine(MAPDIR, "$PREFIX/share/cave/map");
mdefine(TTFDIR, "$PREFIX/share/cave/ttf");
mdefine(FOBJDIR, "$PREFIX/share/cave/fob");
mdefine(INST_MANDIR, "$PREFIX/share/agar/man");

check(make);
check(cc);

check(progname);
check(math);
check(getenv);
check(setenv);
check(strsep);
check(strlcat);
check(strlcpy);
check(asprintf);
check(vasprintf);

mdefine(CFLAGS, "$CFLAGS -I$SRC");
if [ "${cc_is_gcc}" = "yes" ]; then
	mdefine(CFLAGS, "$CFLAGS -Wall -Werror -Wmissing-prototypes -Wno-unused");
fi

require(sdl, 1.2.0);
require(freetype, 7.0.1);

# Include X11-specific code?
if [ "${with_x11}" != "no" ]; then
	check(x11);
fi

# OpenGL support?
if [ "${with_gl}" != "no" ]; then
	check(opengl);
	if [ "${HAVE_OPENGL}" = "yes" ]; then
		mdefine(SDL_CFLAGS, "$SDL_CFLAGS $OPENGL_CFLAGS");
	fi
fi

# Debugging?
if [ "${enable_debug}" = "yes" ]; then
	hdefine(DEBUG, 1);
	hdefine(LOCKDEBUG, 1);
else
	hundef(DEBUG);
	hundef(LOCKDEBUG);
fi

# Thread safety?
if [ "${enable_serialization}" != "no" ]; then
	hdefine(SERIALIZATION, 1);
else
	hundef(SERIALIZATION);
fi

# Reduce code size and gain some cycles by disabling unused modes.
if [ "${enable_8bpp}" != "no" ]; then
	hdefine(VIEW_8BPP, 1);
else
	hundef(VIEW_8BPP);
fi
if [ "${enable_16bpp}" != "no" ]; then
	hdefine(VIEW_16BPP, 1);
else
	hundef(VIEW_16BPP);
fi
if [ "${enable_24bpp}" != "no" ]; then
	hdefine(VIEW_24BPP, 1);
else
	hundef(VIEW_24BPP);
fi
if [ "${enable_32bpp}" != "no" ]; then
	hdefine(VIEW_32BPP, 1);
else
	hundef(VIEW_32BPP);
fi
