# $Csoft: configure.in,v 1.66 2003/06/06 03:21:03 vedge Exp $
# Public domain

register("--with-smpeg",	"MPEG playback using smpeg [default: check]");
register("--with-x11",		"X11-specific code [default: check]");
register("--with-gl",		"OpenGL rendering support [default: check]");
register("--with-jpeg",		"JPEG screenshot support [default: check]");
register("--enable-debug",	"Engine debugging [default: yes]");
register("--enable-threads",	"Thread safety [default: no]");
register("--enable-floating-point", "Floating point operations [default: yes]");
register("--enable-static",	"Produce a static binary [default: no]");
register("--enable-8bpp",	"Support for 8 bpp display [default: yes]");
register("--enable-16bpp",	"Support for 16 bpp display [default: yes]");
register("--enable-24bpp",	"Support for 24 bpp display [default: yes]");
register("--enable-32bpp",	"Support for 32 bpp display [default: yes]");
register("--help",		"Show this message");

if [ "${help}" = "yes" ]; then
	help();
fi

makeout(Makefile.config);
inclout(config);
logout(config.log);

# Define the data directories.
mdefine(SHAREDIR, "$PREFIX/share/cave");
hdefine(SHAREDIR, "\"$PREFIX/share/cave\"");
mdefine(TTFDIR, "$PREFIX/share/cave/fonts");
hdefine(TTFDIR, "\"$PREFIX/share/cave/fonts\"");
mdefine(INST_MANDIR, "$PREFIX/share/agar/man");
mdefine(INST_PSDIR, "$PREFIX/share/agar/ps");

check(cc);
check(progname);
check(math);
check(gethostname);
check(getenv);
check(setenv);
check(strsep);
check(strlcat);
check(strlcpy);
check(asprintf);
check(vasprintf);
check(snprintf);
check(vsnprintf);

mdefine(CFLAGS, "$CFLAGS -I$SRC");
#mdefine(CFLAGS, "$CFLAGS -Wall -Werror -Wmissing-prototypes -Wno-unused");
#mdefine(CFLAGS, "$CFLAGS -Wno-missing-headers");

require(sdl, 1.2.0);
require(freetype, 7.0.1);

# Include X11-specific code?
if [ "${with_x11}" != "no" ]; then
	check(x11);
else
	hundef(HAVE_X11);
fi

# OpenGL support?
if [ "${with_gl}" != "no" ]; then
	check(opengl);
	if [ "${HAVE_OPENGL}" = "yes" ]; then
		mdefine(SDL_CFLAGS, "$SDL_CFLAGS $OPENGL_CFLAGS");
	fi
else
	hundef(HAVE_OPENGL);
fi

# JPEG support?
if [ "${with_jpeg}" != "no" ]; then
	check(jpeg);
else
	hundef(HAVE_JPEG);
fi

# Look for the smpeg library.
if [ "${with_smpeg}" != "no" ]; then
	check(smpeg, 0.4.4);
else
	hundef(HAVE_SMPEG);
fi

# Compile a static binary?
if [ "${enable_static}" = "yes" ]; then
	mdefine(LDFLAGS, "-static");
fi

# Debugging?
if [ "${enable_debug}" != "no" ]; then
	hdefine(DEBUG, 1);
	hdefine(LOCKDEBUG, 1);
else
	hundef(DEBUG);
	hundef(LOCKDEBUG);
fi

# Thread safety?
if [ "${enable_threads}" = "yes" ]; then
	hdefine(THREADS, 1);
else
	hundef(THREADS);
fi

# Floating point operations
if [ "${enable_floating_point}" != "no" ]; then
	hdefine(FLOATING_POINT, 1);
else
	hundef(FLOATING_POINT);
fi

# Reduce code size and gain some cycles by disabling unused modes.
if [ "${enable_8bpp}" != "no" ]; then
	hdefine(VIEW_8BPP, 1);
else
	hundef(VIEW_8BPP);
fi
if [ "${enable_16bpp}" != "no" ]; then
	hdefine(VIEW_16BPP, 1);
else
	hundef(VIEW_16BPP);
fi
if [ "${enable_24bpp}" != "no" ]; then
	hdefine(VIEW_24BPP, 1);
else
	hundef(VIEW_24BPP);
fi
if [ "${enable_32bpp}" != "no" ]; then
	hdefine(VIEW_32BPP, 1);
else
	hundef(VIEW_32BPP);
fi
