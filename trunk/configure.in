# $Csoft: configure.in,v 1.88 2005/05/08 02:10:27 vedge Exp $
# Public domain

REGISTER("--with-freetype",	"Use FreeType font engine [default: check]")
REGISTER("--with-gl",		"OpenGL rendering support [default: check]")
REGISTER("--with-jpeg",		"JPEG screenshot support [default: no]")
REGISTER("--enable-network",	"Agar-Net support [default: check]")
REGISTER("--enable-edition",	"Graphical editors [default: yes]")
REGISTER("--enable-threads",	"Thread safety [default: no]")
REGISTER("--enable-utf8",	"Unicode text/input support [default: no]")
REGISTER("--enable-astro-units", "Include astronomical units [default: no]")
REGISTER("--enable-histo-units", "Include historical units [default: no]")
REGISTER("--enable-8bpp",	"Support for 8 bpp display [default: yes]")
REGISTER("--enable-16bpp",	"Support for 16 bpp display [default: yes]")
REGISTER("--enable-24bpp",	"Support for 24 bpp display [default: yes]")
REGISTER("--enable-32bpp",	"Support for 32 bpp display [default: yes]")
REGISTER("--enable-warnings",	"Suggested compiler warnings [default: no]")

# Agar version
HDEFINE(VERSION, "\"1.1-beta\"")

# Installation directories
MDEFINE(SHAREDIR, "\${PREFIX}/share/agar")
HDEFINE(SHAREDIR, "\"$PREFIX/share/agar\"")
MDEFINE(LOCALEDIR, "\${PREFIX}/share/agar/locale")
HDEFINE(LOCALEDIR, "\"$PREFIX/share/agar/locale\"")
MDEFINE(TTFDIR, "\${PREFIX}/share/agar/fonts")
HDEFINE(TTFDIR, "\"$PREFIX/share/agar/fonts\"")
MDEFINE(LIBDIR, "\${PREFIX}/lib")
HDEFINE(LIBDIR, "\"$PREFIX/lib\"")
MDEFINE(INCLDIR, "\${PREFIX}/include/agar")
HDEFINE(INCLDIR, "\"$PREFIX/include/agar\"")
MDEFINE(MANDIR, "\${PREFIX}/share/agar/man")
MDEFINE(PSDIR, "\${PREFIX}/share/agar/ps")

CHECK(cc)
CHECK(sys_types)
CHECK(progname)
CHECK(free_null)
CHECK(math)
CHECK(gethostname)
CHECK(getpwuid)
CHECK(getuid)
CHECK(getenv)
CHECK(setenv)
CHECK(strsep)
CHECK(strlcat)
CHECK(strlcpy)
CHECK(asprintf)
CHECK(vasprintf)
CHECK(snprintf)
CHECK(vsnprintf)
CHECK(setlocale)
CHECK(arc4random)
CHECK(md5)
CHECK(sha1)
CHECK(rmd160)
CHECK(pthreads)

MDEFINE(CFLAGS, "$CFLAGS -I$SRC")
if [ "${enable_warnings}" = "yes" ]; then
	MDEFINE(CFLAGS, "$CFLAGS -Wall -Werror -Wmissing-prototypes")
	MDEFINE(CFLAGS, "$CFLAGS -Wno-unused")
fi

# SDL is required.
CHECK(sdl, 1.2.0)
if [ "${HAVE_SDL}" != "yes" ]; then
	echo "*"
	echo "* Agar requires the SDL library. Please install it and try again."
	echo "* You can download SDL from: http://www.libsdl.org/."
	echo "*"
	exit 1
fi

# Enable Freetype support if the Freetype library is found.
# If FreeType is unavailable, Agar will fall back to bitmap fonts.
if [ "${with_freetype}" != "no" ]; then
	CHECK(freetype, 7.0.1)
	if [ "${HAVE_FREETYPE}" != "yes" ]; then
		echo "*"
		echo "* Agar needs FreeType in order to display vector-based"
		echo "* fonts. If you would like to use Agar's bitmap font, "
		echo "* rerun configure with the --without-freetype option."
		echo "* (note that the bundled bitmap font can only display"
		echo "* ASCII characters)."
		echo "*"
		exit 1
	fi
else
	HUNDEF(HAVE_FREETYPE)
fi

# Enable OpenGL support if an OpenGL library is found.
if [ "${with_gl}" != "no" ]; then
	CHECK(opengl)
	if [ "${HAVE_OPENGL}" = "yes" ]; then
		MDEFINE(SDL_CFLAGS, "$SDL_CFLAGS $OPENGL_CFLAGS")
	fi
else
	HUNDEF(HAVE_OPENGL)
fi

# Enable JPEG support if libjpeg is found.
if [ "${with_jpeg}" != "no" ]; then
	CHECK(jpeg)
else
	HUNDEF(HAVE_JPEG)
fi

# Enable network support if agar-net is found.
if [ "${enable_network}" = "yes" ]; then
	CHECK(agar-net)
	if [ "${HAVE_AGAR_NET}" = "yes" ]; then
		HDEFINE(NETWORK, 1)
	else
		echo "*"
		echo "* The --enable-network option requires Agar-Net."
		echo "* You can download it from http://agar-net.csoft.org/."
		echo "*"
		exit 1
	fi
else
	HUNDEF(NETWORK)
fi

# Don't enable thread safety unless requested explicitely.
if [ "${enable_threads}" = "yes" ]; then
	HDEFINE(THREADS, 1)
else
	HUNDEF(THREADS)
fi

# Disable UTF8 support by default.
if [ "${enable_utf8}" = "yes" ]; then
	HDEFINE(UTF8, 1)
else
	HUNDEF(UTF8)
fi

# Enable astronomical units (constants are too large for some compilers).
if [ "${enable_astro_units}" = "yes" ]; then
	HDEFINE(ASTRONOMICAL_UNITS, 1)
else
	HUNDEF(ASTRONOMICAL_UNITS)
fi

# Enable conversion of historical units.
if [ "${enable_histo_units}" = "yes" ]; then
	HDEFINE(HISTORICAL_UNITS, 1)
else
	HUNDEF(HISTORICAL_UNITS)
fi

# Enable graphical edition by default.
if [ "${enable_edition}" != "no" ]; then
	HDEFINE(EDITION, 1)
else
	HUNDEF(EDITION)
fi

# Support 8/16/24/32bpp video displays by default.
# Disable unused modes to reduce code size and gain some cycles.
if [ "${enable_8bpp}" != "no" ]; then
	HDEFINE(VIEW_8BPP, 1)
else
	HUNDEF(VIEW_8BPP)
fi
if [ "${enable_16bpp}" != "no" ]; then
	HDEFINE(VIEW_16BPP, 1)
else
	HUNDEF(VIEW_16BPP)
fi
if [ "${enable_24bpp}" != "no" ]; then
	HDEFINE(VIEW_24BPP, 1)
else
	HUNDEF(VIEW_24BPP)
fi
if [ "${enable_32bpp}" != "no" ]; then
	HDEFINE(VIEW_32BPP, 1)
else
	HUNDEF(VIEW_32BPP)
fi

