.\" Copyright (c) 2001-2012 Hypertriton, Inc. <http://hypertriton.com/>
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
.\" INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
.\" IN ANY WAY OUT OF THE USE OF THIS SOFTWARE EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.\"	$OpenBSD: mdoc.template,v 1.6 2001/02/03 08:22:44 niklas Exp $
.\"
.Dd NOVEMBER 26, 2001
.Dt AG_CORE 3
.Os
.ds vT Agar API Reference
.ds oS Agar 1.0
.Sh NAME
.Nm AG_Core
.Nd agar core library initialization
.Sh SYNOPSIS
.Bd -literal
#include <agar/core.h>
.Ed
.Sh DESCRIPTION
The Agar core library,
.Nm ,
is a compact library which implements the base Agar object system.
It also provides cross-platform interfaces to filesystems, databases, user
accounts, timers and network facilities.
The
.Nm
library also includes utility routines for C strings and error handling
(see
.Dq SEE ALSO
section).
.Pp
Note that there are no GUI-related functions in
.Nm .
The Agar GUI system (the ag_gui library) uses 
.Nm ,
but
.Nm
can be used in a standalone manner by non-GUI applications.
.Pp
The
.Fn AG_InitCore
function should be invoked before any other Agar library call is made.
.Pp
.nr nS 1
.Ft "int"
.Fn AG_InitCore "const char *progname" "Uint flags"
.Pp
.Ft "void"
.Fn AG_AtExitFunc "void (*fn)(void)"
.Pp
.Ft "void"
.Fn AG_Quit "void"
.Pp
.Ft "void"
.Fn AG_Destroy "void"
.Pp
.nr nS 0
The
.Fn AG_InitCore
function initializes the
.Nm
library.
The optional
.Fa progname
argument sets an application name (this name may be used by ag_gui and
.Nm
to set various platform-dependent defaults).
.Fa progname
may be set to NULL.
.Pp
Available
.Fa flags
options include:
.Bl -tag -width "AG_CREATE_DATADIR "
.It AG_VERBOSE
Allow errors/warnings on the standard error output.
.It AG_CREATE_DATADIR
Create a data directory for the application.
The exact location of the directory is platform-dependent (and may
depend on
.Fa progname ) .
For example, on POSIX platforms,
.Pa ~/.<progname>
would be used.
.It AG_SOFT_TIMERS
Specify that the application will be using a custom event loop calling
.Xr AG_ProcessTimeouts 3
explicitely.
If this flag is not specified, Agar is allowed to use platform-specific timer
interfaces (such as
.Xr kqueue 2
or timerfd), where they are available.
.It AG_USE_KQUEUE
Prefer use of the
.Xr kqueue 2
interface, if it is available.
.El
.Pp
The
.Fn AG_AtExitFunc
registers a function that will be invoked automatically by
.Fn AG_Destroy .
.Pp
.Fn AG_Quit
terminates the application by releasing resources allocated by
.Nm
and invoking
.Xr exit 2 .
.Pp
The
.Fn AG_Destroy
function releases all resources allocated by the
.Nm
library.
.Pp
.Sh AGAR VERSION INFORMATION
.nr nS 1
.Ft void
.Fn AG_GetVersion "AG_AgarVersion *ver"
.Pp
.Ft bool
.Fn AG_VERSION_ATLEAST "int major" "int minor" "int patchlevel"
.Pp
.nr nS 0
The
.Fn AG_GetVersion
function fills an
.Ft AG_AgarVersion
structure with version information:
.Bd -literal
typedef struct ag_agar_version {
	int major;
	int minor;
	int patch;
	const char *release;
} AG_AgarVersion;
.Ed
.Pp
Agar does not need to have been previously initialized for
.Fn AG_GetVersion
to work.
.Pp
The
.Fn AG_VERSION_ATLEAST
macro evaluates to true if the current Agar version is equal to, or exceeds
the given version number.
.Sh SEE ALSO
.Xr AG_Intro 3 ,
.Xr AG_Db 3 ,
.Xr AG_Dir 3 ,
.Xr AG_Error 3 ,
.Xr AG_Execute 3 ,
.Xr AG_File 3 ,
.Xr AG_Net 3 ,
.Xr AG_Object 3 ,
.Xr AG_String 3 ,
.Xr AG_Timer 3 ,
.Xr AG_User 3 .
.Sh HISTORY
The
.Fn AG_InitCore
function first appeared in Agar 1.0.
Agar 1.4.0 saw the introduction of
.Xr AG_InitGraphics 3 .
