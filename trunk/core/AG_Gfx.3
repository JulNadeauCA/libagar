.\"	$Csoft: gfx.3,v 1.5 2005/07/19 04:24:13 vedge Exp $
.\"
.\" Copyright (c) 2004, 2005 CubeSoft Communications, Inc.
.\" <http://www.csoft.org>
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
.\" INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
.\" IN ANY WAY OUT OF THE USE OF THIS SOFTWARE EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd May 10, 2004
.Dt AG_GFX 3
.Os
.ds vT Agar API Reference
.ds oS Agar 1.0
.Sh NAME
.Nm AG_Gfx
.Nd agar graphic resource manager
.Sh SYNOPSIS
.Bd -literal
#include <agar/core.h>
.Ed
.Sh DESCRIPTION
The Agar
.Nm
interface manages the storage of graphical information, such as images and
animations.
It is generally associated with an
.Fn AG_Object 3 .
The
.Fn AG_GfxNew
function is used to allocate and initialize a
.Va gfx
structure.
This structure includes an array of pixmaps and an array of animations.
.Pp
It is possible to use an object's graphics resourecs without having to load
the object's data into memory.
Graphical information is saved in such a way that it is possible to quickly
load individual elements.
.Sh INITIALIZATION
.nr nS 1
.Ft "AG_Gfx *"
.Fn AG_GfxNew "void *object"
.Pp
.Ft void
.Fn AG_GfxInit "AG_Gfx *gfx"
.Pp
.Ft void
.Fn AG_GfxUnused "AG_Gfx *gfx"
.Pp
.Ft void
.Fn AG_GfxDestroy "AG_Gfx *gfx"
.nr nS 0
.Pp
The
.Fn AG_GfxNew
function allocates and/initializes a
.Nm
structure.
.Pp
The
.Fn AG_GfxUnused
function decrements the reference count and destroys the given
.Nm
using
.Fn AG_GfxDestroy
if it reaches 0.
.Sh STATIC CONTENT
.nr nS 1
.Ft "AG_Gfx *"
.Fn AG_WireGfx "void *object" "const char *den_filename"
.Pp
.nr nS 0
.Pp
The
.Fn AG_WireGfx
function permanently wires graphics from the given
.Xr AG_DEN 5
archive file into memory.
The archive should be located in one of the 
.Sq den-path
directories.
It is useful for pixmaps used by widgets, for instance.
.Sh IMAGES/ANIMATIONS
.nr nS 1
.Ft void
.Fn AG_GfxAllocSprites "AG_Gfx *gfx" "Uint32 n"
.Pp
.Ft "Uint32"
.Fn AG_GfxAddSprite "AG_Gfx *gfx" "SDL_Surface *surface"
.Pp
.Ft "void"
.Fn AG_SpriteSetSurface "AG_Sprite *sprite" "SDL_Surface *su"
.Pp
.Ft "void"
.Fn AG_SpriteSetSnapMode "AG_Sprite *sprite" "enum ag_gfx_snap_mode snap_mode"
.Pp
.Ft "void"
.Fn AG_SpriteSetOrigin "AG_Sprite *sprite" "int x" "int y"
.Pp
.Ft "AG_Gfx_anim *"
.Fn AG_GfxAddAnim "AG_Gfx *gfx"
.nr nS 0
.Pp
The
.Fn AG_GfxAllocSprites
function allocates
.Fa n
sprite entries and initializes them to NULL.
The
.Fn AG_GfxAddSprite
function allocates a new sprite and attributes the given surface to it.
.Pp
The
.Fn AG_SpriteSetSurface
function changes the surface associated with the given sprite (automatically
freeing the previous surface if there was any).
.Pp
The
.Fn AG_SpriteSetSnapMode
function changes the default snapping mode for the sprite.
Acceptable arguments include:
.Bd -literal
enum ag_gfx_snap_mode {
	AG_GFX_SNAP_NOT,
	AG_GFX_SNAP_TO_GRID,
	AG_GFX_SNAP_TO_CENTER
};
.Ed
.Pp
The
.Fn AG_SpriteSetOrigin
function selects a different origin point for the given sprite.
.Pp
The
.Fn AG_GfxAddAnim
function allocates a new animation structure.
The frames must be allocated manually.
.Sh SEE ALSO
.Xr AG_Intro 3 ,
.Xr AG_Object 3 ,
.Xr SDL_Surface 3
.Sh HISTORY
The
.Nm
structure first appeared in Agar 1.0
