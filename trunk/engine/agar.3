.\"	$Csoft: agar.3,v 1.26 2003/05/07 00:46:44 vedge Exp $
.\"
.\" Copyright (c) 2001, 2002, 2003 CubeSoft Communications, Inc.
.\" <http://www.csoft.org>
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
.\" INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
.\" IN ANY WAY OUT OF THE USE OF THIS SOFTWARE EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.\"	$OpenBSD: mdoc.template,v 1.6 2001/02/03 08:22:44 niklas Exp $
.\"
.Dd NOVEMBER 26, 2001
.Dt AGAR 3
.Os
.ds vT Agar API Reference
.ds oS Agar 1.0
.Sh NAME
.Nm agar
.Nd graphical game engine
.Sh DESCRIPTION
.Nm
is a high-level game/simulation engine.
.Nm
currently implements the following subsystems:
.Bl -tag -width "transform(3) " -compact
.It config
Generic engine/game configuration settings
.It Xr event 3
Generic event processing
.It Xr input 3
Processing of events from input devices
.It Xr map 3
2D multilayered, tile-based levels
.It Xr mapedit 3
Level edition
.It Xr object 3
Generic object framework
.It Xr perso 3
Game characters
.It Xr physics 3
Movement of objects inside levels
.It Xr prop 3
Generic properties
.It Xr rootmap 3
Level display in game mode
.It Xr text 3
Interface to font engine
.It Xr version 3
Signatures and versioning of data
.It Xr view 3
Video display interface
.It Xr widget 3
Widget set framework
.It Xr media 3
Loading of data (ie. gfx/audio) from various formats
.El
.Sh THREAD SAFETY
The following subsystems do not provide thread safety:
.Bl -tag -width "mapedit(3) " -compact
.It Xr mapedit 3
Level edition
.El
.Pp
The other
.Nm
subsystems provide thread-safe interfaces, using the following locking
primitives:
.Bl -bullet -compact
.It
Simple mutexes
.It
Recursive mutexes
.It
Read-write locks
.El
.Sh THREAD SAFETY
In structure definitions for thread-safe interfaces, all members of a
structure that follow a lock are protected it, unless mentioned otherwise.
Members that do not follow a lock are read-only once the structure is
attached (not once the structure is initialized, since derivate structures
may need to initialize additional data before attach).
.Bd -literal
struct foo {
	char	*name;		/* RO once attached */
	int	 type;		/* RO once attached */

	pthread_mutex_t	 pos_lock;
	struct map	*map;	/* RW (pos_lock) */
	int		 x, y;	/* RW (pos_lock) */
};
.Ed
.Pp
If multi-threading support was enabled at compile time,
.Pa Aq engine/engine.h
defines error-checking wrappers around
.Fn pthread_*
calls (or no-ops with threads disabled).
.Sh INCLUDE FILES
For maximum portability, SDL's
.Pa Aq begin_code.h
and
.Pa Aq close_code.h
must be included around possible C dynamic library function definitions,
static inlined functions, and structure definitions.
Function definitions must be enclosed in
.Dv __BEGIN_DECLS
and
.Dv __END_DECLS ,
to allow inclusion from C++ code.
.Pp
The
.Pa Aq engine/compat/*.h
and
.Pa Aq config/*.h
includes should come first, followed by
.Pa Aq engine/engine.h .
which itself includes:
.Bl -tag -width "<engine/compat/queue.h> " -compact
.It Pa Aq pthread.h
POSIX threads, if enabled at compile-time.
.It Pa Aq SDL.h
Software DirectMedia Layer.
.It Pa Aq GL/GL.h
OpenGL interface, if enabled at compile-time.
.It Pa Aq engine/compat/queue.h
4.4BSD
.Xr queue 3
definitions.
.It Pa Aq libfobj/fobj.h
For the
.Ft struct netbuf
definition, required by generic load/save operations.
.It Pa Aq engine/error.h
Error wrappers,
.Fn warning
and
.Fn fatal .
.It Pa Aq engine/object.h
Generic
.Xr object 3
types and operations.
.It Pa Aq engine/event.h
Generic
.Xr event 3
handling.
.El
.Sh GENERIC ERROR HANDLING
.nr nS 1
.Ft void
.Fn error_set "const char *fmt" "..."
.Pp
.Ft char *
.Fn error_get "void"
.Pp
.Ft void
.Fn error_fatal "const char *fmt" "..."
.Pp
.nr nS 0
The
.Fn error_set
function sets the error message string, using a
.Xr printf 3
style format string as
.Fa fmt .
.Fn error_get
returns a pointer to the current error message string.
.Pp
If multi-threading was enabled at compile time, the error message string is
accessed using a thread-specific key.
.Pp
The
.Fn error_fatal
function prints an error message and causes the application to exit, or
.Xr abort 3
if debugging is enabled.
.Sh SEE ALSO
.Xr event 3 ,
.Xr map 3 ,
.Xr mapedit 3 ,
.Xr object 3 ,
.Xr perso 3 ,
.Xr physics 3 ,
.Xr prop 3 ,
.Xr rootmap 3 ,
.Xr version 3 ,
.Xr view 3 ,
.Xr world 3 ,
.Xr widget 3 ,
.Xr window 3
