.\"	$Csoft: agar.3,v 1.31 2003/06/15 05:03:53 vedge Exp $
.\"
.\" Copyright (c) 2001, 2002, 2003 CubeSoft Communications, Inc.
.\" <http://www.csoft.org>
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
.\" INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
.\" IN ANY WAY OUT OF THE USE OF THIS SOFTWARE EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.\"	$OpenBSD: mdoc.template,v 1.6 2001/02/03 08:22:44 niklas Exp $
.\"
.Dd NOVEMBER 26, 2001
.Dt AGAR 3
.Os
.ds vT Agar API Reference
.ds oS Agar 1.0
.Sh NAME
.Nm agar
.Nd graphical C application framework
.Sh DESCRIPTION
.Nm
is a high-level, cross-platform C application framework aimed primarly at
2D/3D games and simulations.
.Sh OBJECT DESIGN
.Nm
games/simulations are built around a tree of
.Xr object
structures.
.Pp
Generic
.Xr object 3
operations like
.Fn object_load ,
.Fn object_save ,
and
.Fn object_destroy
when applied to the parent also effect the child objects, recursively.
It is possible to dynamically load and free custom data (like
.Xr map 3
nodes), but the contents of the
.Ft object
structure remain resident.
An object tree might look like:
.Bd -literal
world --- village -*- house1  *- armor
                   |          |
                   *- jephre -*- sword
                              |
                              *- potion
.Ed
.Pp
In this example, calling
.Fn object_save
on
.Pa /world/village
would also save
.Pa /world/village/house1 ,
.Pa /world/village/jephre ,
.Pa /world/village/jephre/armor ,
and so on.
When
.Fn object_load
is next invoked on
.Sq /world/village ,
those objects will be allocated and initialized from scratch.
.Pp
In this example, the character,
.Pa /world/village/jephre ,
might have been initialized by the character editor and attached to the
.Pa /world/village
map by a level designer, in order to assign a default position and default
character status and items.
Fully loading and saving the state of a game may be accomplished by calling
.Fn object_load
and
.Fn object_save
on the
.Pa /world
object.
.Sh GENERIC ERROR HANDLING
.nr nS 1
.Ft void
.Fn error_set "const char *fmt" "..."
.Pp
.Ft char *
.Fn error_get "void"
.Pp
.Ft void
.Fn error_fatal "const char *fmt" "..."
.nr nS 0
.Pp
The
.Fn error_set
function sets the error message string, using a
.Xr printf 3
style format string as
.Fa fmt .
.Fn error_get
returns a pointer to the current error message string.
.Pp
If multi-threading was enabled at compile time, the error message string is
accessed using a thread-specific key.
.Pp
The
.Fn error_fatal
function prints an error message and terminates the application
(using
.Xr abort 3
if debugging is enabled).
.Sh THREAD SAFETY
The following subsystems do not provide thread safety:
.Pp
.Bl -tag -width "mapedit(3) " -compact
.It Xr mapedit 3
Level edition
.El
.Pp
The other
.Nm
subsystems provide thread-safe interfaces, using the following locking
primitives:
.Pp
.Bl -bullet -compact
.It
Simple mutexes
.It
Recursive mutexes
.It
Read-write locks
.El
.Pp
In structure definitions for thread-safe interfaces, all members of a
structure that follow a lock are protected by it, unless mentioned otherwise.
Members that do not follow a lock are read-only once the structure is
attached (not once the structure is initialized, since derivate structures
may need to initialize additional data before attach).
.Bd -literal
struct foo {
	char	*name;		/* RO once attached */
	int	 type;		/* RO once attached */

	pthread_mutex_t	 pos_lock;
	struct map	*map;	/* RW (pos_lock) */
	int		 x, y;	/* RW (pos_lock) */
};
.Ed
.Pp
If multi-threading support was enabled at compile time,
.Pa Aq engine/engine.h
defines error-checking wrappers around
.Fn pthread_*
calls (or no-ops with threads disabled).
.Sh FILES
The
.Pa Aq engine/compat/*.h
and
.Pa Aq config/*.h
includes should come first, followed by
.Pa Aq engine/engine.h ,
which itself includes:
.Pp
.Bl -tag -width "<engine/loader/integral.h> " -compact
.It Pa Aq pthread.h
POSIX threads, if available.
.It Pa Aq SDL.h
Software DirectMedia Layer.
.It Pa Aq GL/GL.h
OpenGL interface, if available.
.It Pa Aq engine/compat/queue.h
4.4BSD
.Xr queue 3
definitions.
.It Pa Aq engine/compat/strlcpy.h
For
.Xr strlcpy 3 .
.It Pa Aq engine/compat/strlcat.h
For
.Xr strlcat 3 .
.It Pa Aq engine/compat/snprintf.h
For
.Xr snprintf 3 .
.It Pa Aq engine/compat/vsnprintf.h
For
.Xr vsnprintf 3 .
.It Pa Aq engine/compat/vasprintf.h
For
.Xr vasprintf 3 .
.It Pa Aq engine/compat/strsep.h
For
.Xr strsep 3 .
.It Pa Aq engine/loader/netbuf.h
For the
.Ft struct netbuf
definition, required by load/save function prototypes.
.It Pa Aq engine/loader/integral.h
For integers.
.It Pa Aq engine/loader/real.h
For real numbers.
.It Pa Aq engine/loader/string.h
For Latin-1 text.
.It Pa Aq engine/loader/unicode.h
For Unicode text.
.It Pa Aq engine/loader/version.h
For versioning.
.It Pa Aq engine/error/error.h
Error handling.
.It Pa Aq engine/object.h
Generic
.Xr object 3
types and operations.
.It Pa Aq engine/event.h
For the
.Ft union evarg
definition and generic
.Xr event 3
handling.
.El
.Sh SEE ALSO
.Xr event 3 ,
.Xr map 3 ,
.Xr mapedit 3 ,
.Xr object 3 ,
.Xr perso 3 ,
.Xr physics 3 ,
.Xr prop 3 ,
.Xr rootmap 3 ,
.Xr version 3 ,
.Xr view 3 ,
.Xr widget 3 ,
.Xr window 3
