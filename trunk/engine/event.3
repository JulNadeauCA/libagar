.\"	$Csoft: event.3,v 1.3 2002/12/28 05:50:17 vedge Exp $
.\"
.\" Copyright (c) 2002, 2003 CubeSoft Communications, Inc.
.\" <http://www.csoft.org>
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
.\" INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
.\" IN ANY WAY OUT OF THE USE OF THIS SOFTWARE EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd September 16, 2002
.Dt EVENT 3
.Os
.Sh NAME
.Nm event
.Nd agar event system
.Sh SYNOPSIS
.Bd -literal
#include <engine/event.h>
.Ed
.Sh DESCRIPTION
Agar implements generic events using a list of event handlers for
.Xr object 3
structures.
The
.Nm
subsystem also implements the
.Sq main loop
used by Agar applications, which performs the following operations:
.Bl -tag -width "Event processing"
.It Video updates
The display is updated when a counter exceeds a refresh rate.
The time it took for the frame to be drawn is taken in consideration as the
refresh rate is recalculated, so animations always show the same speed.
Video updates have precedence in the event loop.
.Pp
If the frame was too complicated to draw in one cycle, the minimum delay is
decremented down to the minimum set by
.Xr view_set_refresh 3 .
This can be avoided by lowering the frame rate to ensure that the frame is
rendered in one cycle, or reducing the amount of time spent in rendering
functions.
.It Event processing
SDL events are translated to
.Nm
structures, which are sent to the relevant subsystems.
.El
.Sh EVENT HANDLERS
Event handlers are identified by null-terminated strings.
Event handler arguments are described by an array of unions:
.Pp
.Bd -literal
typedef union evarg {
	void	*p;
	char	*s;
	char	 c;
	int	 i;
	long int li;
	double	 f;
} *evargs;
.Ed
.Sh EVENT PROCESSING
.nr nS 1
.Ft "void"
.Fn event_new "void *obj" "char *event" "void (*handler)(int argc, union evarg *argv)" "const char *fmt" "..."
.Pp
.Ft "void"
.Fn event_post "void *obj" "char *event" "const char *fmt" "..."
.Pp
.Ft "void"
.Fn event_forward "void *obj" "char *event" "int argc" "union evarg *argv"
.nr nS 0
.Pp
The
.Fn event_new
function registers a new event handler for an event identified by the
null-terminated
.Fa event
string.
.Fa obj
will be passed as the first argument to the event handler function.
.Fa handler
points to the event-handling function.
The
.Fa fmt
argument is a
.Xr printf 3
style format string.
The following arguments will be inserted at the start of the evarg
array.
.Pp
The
.Fn event_post
function invokes the event handler matching the event identified by the
null-terminated
.Fa event
string, if any.
The
.Fa fmt
argument is a
.Xr printf 3
like format string.
The following arguments will be inserted at the end of the evarg
array.
.Pp
The
.Fn event_forward
function forwards the event identified by
.Fa event
to object
.Fa obj .
.Fn event_forward
is usually called from an event handler.
.Sh SEE ALSO
.Xr agar 3 .
.Sh HISTORY
The
.Nm
layer first appeared in AGAR 1.0
