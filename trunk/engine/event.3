.\"	$Csoft: world.3,v 1.1 2002/09/16 15:55:08 vedge Exp $
.\"
.\" Copyright (c) 2002 CubeSoft Communications, Inc.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistribution of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Neither the name of CubeSoft Communications, nor the names of its
.\"    contributors may be used to endorse or promote products derived from
.\"    this software without specific prior written permission.
.\" 
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
.\" INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
.\" IN ANY WAY OUT OF THE USE OF THIS SOFTWARE EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd September 16, 2002
.Dt EVENT 3
.Os
.Sh NAME
.Nm event
.Nd agar event system
.Sh SYNOPSIS
.Bd -literal
#include <engine/event.h>
.Ed
.Sh DESCRIPTION
The agar
.Nm
system can post events to agar
.Xr object 3
structures and derivates.
.Sh EVENT HANDLERS
Event handlers are identified by null-terminated strings.
Event handler arguments are described by an array of unions:
.Pp
.Bd -literal
typedef union evarg {
	void	*p;
	char	*s;
	char	 c;
	int	 i;
	long int li;
	double	 f;
} *evargs;
.Ed
.Sh EVENT PROCESSING
.nr nS 1
.Ft "void"
.Fn event_new "void *obj" "char *event" "int flags" "void (*handler)(int argc, union evarg *argv)" "const char *fmt" "..."
.Pp
.Ft "void"
.Fn event_post "void *obj" "char *event" "const char *fmt" "..."
.Pp
.Ft "void"
.Fn event_forward "void *obj" "char *event" "int argc" "union evarg *argv"
.nr nS 0
.Pp
The
.Fn event_new
function registers a new event handler for an event identified by the
null-terminated
.Fa event
string.
.Fa obj
will be passed as the first argument to the event handler function.
.Fa handler
points to the event-handling function.
The
.Fa fmt
argument is a
.Xr printf 3
style format string.
The following arguments will be inserted at the start of the evarg
array.
.Fa flags
may include:
.Pp
.Bd -literal
#define	EVENT_ASYNC	0x01	/* Event handler runs in own thread */
.Ed
.Pp
The
.Fn event_post
function invokes the event handler matching the event identified by the
null-terminated
.Fa event
string, if any.
If the event handler has the
.Dv EVENT_ASYNC
flag set, a new thread is created.
Such asynchronous event handlers should ensure that the object in question
still exists after having acquired
.Va world->lock .
The
.Fa fmt
argument is a
.Xr printf 3
like format string.
The following arguments will be inserted at the end of the evarg
array.
.Pp
The
.Fn event_forward
function forwards the event identified by
.Fa event
to object
.Fa obj .
.Fn event_forward
is usually called from an event handler.
.Sh SEE ALSO
.Xr agar 3 .
.Sh HISTORY
The
.Nm
layer first appeared in AGAR 1.0
