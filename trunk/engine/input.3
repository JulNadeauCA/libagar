.\"	$Csoft: world.3,v 1.6 2003/04/12 00:35:06 vedge Exp $
.\"
.\" Copyright (c) 2003 CubeSoft Communications, Inc.
.\" <http://www.csoft.org>
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
.\" INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
.\" IN ANY WAY OUT OF THE USE OF THIS SOFTWARE EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd May 8, 2003
.Dt INPUT 3
.Os
.ds vT Agar API Reference
.ds oS Agar 1.0
.Sh NAME
.Nm input
.Nd agar generic input devices
.Sh SYNOPSIS
.Bd -literal
#include <engine/input.h>
.Ed
.Sh DESCRIPTION
The agar
.Nm
structure is used internally by the
.Xr event 3
and
.Xr object 3
subsystems to represent input devices.
.Pp
Usually, an input device is bound to the position of an
.Xr object 3 .
This allows players to control characters, for instance.
.Sh INITIALIZATION
.nr nS 1
.Ft "void"
.Fn input_new "enum input_type type" "int index"
.Pp
.Ft "struct input *"
.Fn input_find "char *name"
.Pp
.Ft "int"
.Fn input_destroy_all "void"
.Pp
.nr nS 0
The
.Fn input_new
function initializes and a attaches a new input device of the given type.
The name of the new device is set to the type of device followed by the index#,
such as
.Sq keyboard0 .
Acceptable values for
.Fa type
are:
.Bd -literal
enum input_type {
	INPUT_KEYBOARD,		/* Keyboard device */
	INPUT_JOY,		/* Joystick device */
	INPUT_MOUSE		/* Mouse device */
};
.Ed
.Pp
For devices of type
.Dv INPUT_JOY ,
the
.Fa index
argument is the joystick index, as returned by
.Xr SDL_JoystickIndex 3 .
For other devices, the index is set to 0.
.Pp
The
.Fn input_find
function looks for an input device of the given
.Fa name
and returns a pointer to it, or NULL if there is no such device attached.
.Pp
The
.Fn input_destroy_all
function frees all currently attached input devices.
.Sh EVENT HANDLING
.nr nS 1
.Ft void
.Fn input_event "enum input_type type" "SDL_Event *ev"
.Pp
.nr nS 0
The
.Fn input_event
function is called from the
.Xr event 3
loop to process input device events.
.Sh SEE ALSO
.Xr agar 3
.Xr event 3
.Xr object 3
.Sh HISTORY
The
.Nm
layer first appeared in Agar 1.0
