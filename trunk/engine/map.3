.\"	$Csoft: map.3,v 1.6 2002/02/15 05:38:02 vedge Exp $
.\"
.\" Copyright (c) 2001 CubeSoft Communications, Inc.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistribution of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistribution in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of CubeSoft Communications, nor the names of its
.\"    contributors may be used to endorse or promote products derived from
.\"    this software without specific prior written permission.
.\" 
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
.\" INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
.\" IN ANY WAY OUT OF THE USE OF THIS SOFTWARE EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.\"	$OpenBSD: mdoc.template,v 1.6 2001/02/03 08:22:44 niklas Exp $
.\"
.Dd JANUARY 30, 2002
.Dt MAP 3
.Os
.Sh NAME
.Nm map
.Nd AGAR map implementation
.Sh SYNOPSIS
.Fd #include <engine/map.h>
.Sh DESCRIPTION
An agar map is an array of node structures.
Each node may contain a stack of node reference structures,
which point to arbitrary structures and an offset within them.
.Pp
.Sh ENGINE
.nr nS 1
.Ft "struct map *"
.Fn map_create "char *name" "char *descr" "int flags" "int width" "int height"
.Pp
.Ft void
.Fn map_destroy "struct map *map"
.Pp
.Ft "int"
.Fn map_focus "struct map *map"
.Pp
.Ft "int"
.Fn map_unfocus "struct map *map"
.Pp
.nr nS 0
.Pp
.Fn map_create
allocates a map, and
.Fn map_destroy
frees a map.
.Fn map_focus
and
.Fn map_unfocus
toggles the visibility of the map's sprites and animations.
.Sh MANIPULATING REFERENCES
.nr nS 1
.Pp
.Ft "struct noderef *"
.Fn node_addref "struct node *node" "struct object *obj" \
"int offs" "int rflags"
.Pp
.Ft "int"
.Fn node_delref "struct node *node" "struct object *obj" "int offs"
.Pp
.Ft "struct noderef *"
.Fn node_findref "struct node *node" "struct object *obj" "int offs"
.Pp
.nr nS 0
.Pp
.Fn node_addref
adds a reference to
.Fa node
for the element
.Fa offs
of the
.Fa obj
structure.
.Fn node_delref
removes any reference to the element
.Fa offs
of the
.Fa obj
structure on
.Fa node .
.Fn node_findref
returns any reference to the element
.Fa offs
of the
.Fa obj
structure on
.Fa node .
.Sh SEE ALSO
.Xr agar 3
