.\"	$OpenBSD$
.\"
.\" Copyright (c) 2001 CubeSoft Communications, Inc.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistribution of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistribution in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of CubeSoft Communications, nor the names of its
.\"    contributors may be used to endorse or promote products derived from
.\"    this software without specific prior written permission.
.\" 
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
.\" INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
.\" IN ANY WAY OUT OF THE USE OF THIS SOFTWARE EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd March 17, 2002
.Dt OBJECT 3
.Os
.Sh NAME
.Nm object
.Nd AGAR object abstraction
.Sh SYNOPSIS
#include <engine/object.h>
.Sh DESCRIPTION
The agar
.Nm
layer implements:
.Pp
.Bl -bullet -compact
.It
garbage collection.
.It
the storage of sprites.
.It
a list of active object structures.
.El
.Pp
Each object structure holds optional entry points,
.Pp
.Bd -literal
struct obvec {
	int	(*destroy)(void *);	# called before destroy
	int	(*load)(void *, int);	# load from fd
	int	(*save)(void *, int);	# save to fd
	int	(*link)(void *);	# called before link
	int	(*unlink)(void *);	# called after unlnk
};
.Ed
.Pp
which are called by
the generic
.Fn object_destroy ,
.Fn object_link ,
.Fn object_unlink ,
.Fn object_load ,
.Fn object_save
and
.Fn object_dump
functions.
.Sh INITIALIZATION
.nr nS 1
.Ft "int"
.Fn object_init "struct object *ob" "char *name" "int flags" "struct obvec *vec"
.Pp
.Ft "int"
.Fn object_destroy "struct object *ob"
.Pp
.Ft "int"
.Fn object_link "struct object *ob"
.Pp
.Ft "int"
.Fn object_unlink "struct object *ob"
.nr nS 0
.Pp
.Fn object_init
initializes
.Fa ob
and returns a unique identifier.
.Fn object_destroy
frees all resources allocated for
.Fa ob
.Fn object_link
appends
.Fa ob
to the list of active objects, and
.Fn object_unlink
removes
.Fa ob
from the list of active objects.
.Sh SAVING STATES
.Ft "int"
.Fn object_load "struct object *ob"
.Pp
.Ft "int"
.Fn object_loadfrom "struct object *ob" "char *path"
.Pp
.Ft "int"
.Fn object_save "struct object *ob"
.Pp
.nr nS 0
.Pp
.Fn object_load
loads the state of
.Fa ob
from the first file found in data directories.
.Fn object_loadfrom
loads the state of
.Fa ob
from the file at
.Fa path .
.Fn object_save
saves the state of
.Fa ob
to the user's data directory.
.Sh SEE ALSO
.Xr agar 3
.Sh HISTORY
The
.Nm
interface appeared in AGAR 1.0
.\" .Sh BUGS
.\" .Sh CAVEATS
