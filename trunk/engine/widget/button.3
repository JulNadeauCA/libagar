.\"	$Csoft: button.3,v 1.20 2004/04/09 07:31:15 vedge Exp $
.\"
.\" Copyright (c) 2002, 2003, 2004 CubeSoft Communications, Inc.
.\" <http://www.csoft.org>
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
.\" INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
.\" IN ANY WAY OUT OF THE USE OF THIS SOFTWARE EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd August 20, 2002
.Dt BUTTON 3
.Os
.ds vT Agar API Reference
.ds oS Agar 1.0
.Sh NAME
.Nm button
.Nd agar button widget
.Sh SYNOPSIS
.Bd -literal
#include <engine/widget/button.h>
.Ed
.Sh DESCRIPTION
The
.Nm
widget implements a simple push-button containing a string of text or
an image.
.Sh INITIALIZATION
.nr nS 1
.Ft "struct button *"
.Fn button_new "void *parent" "char *caption"
.Pp
.Ft void
.Fn button_init "struct button *button" "char *caption"
.Pp
.Ft void
.Fn button_enable "struct button *button"
.Pp
.Ft void
.Fn button_disable "struct button *button"
.Pp
.Ft void
.Fn button_set_padding "struct button *button" "int padding"
.Pp
.Ft void
.Fn button_set_focusable "struct button *button" "int focusable"
.Pp
.Ft void
.Fn button_set_sticky "struct button *button" "int sticky"
.Pp
.Ft void
.Fn button_set_justify "struct button *button" "enum button_justify jus"
.Pp
.Ft void
.Fn button_set_label "struct button *button" "SDL_Surface *su"
.Pp
.Ft void
.Fn button_printf "struct button *button" "const char *fmt" "..."
.nr nS 0
.Pp
The
.Fn button_new
function allocates, initializes, and attaches a
.Nm
widget.
The
.Fn button_init
function initializes a
.Nm
widget displaying
.Fa caption ,
unless it is NULL.
.Pp
The
.Fn button_enable
and
.Fn button_disable
functions trigger the sensitivity of the
.Nm
widget.
.Pp
The
.Fn button_set_padding
function sets the padding around the label in pixels.
.Pp
The
.Fn button_set_focusable
function with an argument of 0 prevents the button from gaining focus.
The default is to allow buttons to gain focus.
.Pp
The
.Fn button_set_sticky
function with an argument of 1 arranges for the button to trigger its state
only on reception of
.Fn window-mousebuttondown
events.
By default,
.Fn window-mousebuttonup
events reset the state to 0.
.Pp
The
.Fn button_set_justify
function controls the label justification setting:
.Pp
.Bd -literal
enum button_justify {
	BUTTON_LEFT,
	BUTTON_CENTER,
	BUTTON_RIGHT
};
.Ed
.Pp
The
.Fn button_set_label
and
.Fn button_printf
functions are used to modify the button label.
.Sh EVENTS
The
.Nm
widget reacts to the following events:
.Pp
.Bl -tag -compact -width 25n
.It window-mousebuttonup
Release the button if the cursor is inside the widget area.
.It window-mousebuttondown
Press the button.
.It window-keyup
Release the button, unless sticky mode is in effect.
.It window-keydown
Press the button.
.It window-mousemotion
Abort a button press if the cursor is moving outside the button area and sticky
mode is not in effect.
.El
.Pp
The
.Nm
widget generates the following events:
.Pp
.Bl -tag -compact -width 2n
.It Fn button-pushed "int new_state"
The button was pressed.
The
.Fa new_state
argument is useful in conjunction with the
.Dv BUTTON_STICKY
flag.
.It Fn button-mouseoverlap "int overlap"
The mouse cursor has entered/exited the button area.
This is typically is used to display tool tips.
.El
.Sh BINDINGS
The
.Nm
widget provides the following bindings:
.Pp
.Bl -tag -compact -width "int *state"
.It Va int *state
Button state (1=pressed, 0=released)
.El
.Sh SEE ALSO
.Xr agar 3 ,
.Xr widget 3 ,
.Xr window 3
.Sh HISTORY
The
.Nm
widget first appeared in Agar 1.0.
.Sh BUGS
A more general interface may be preferable to
.Fn button_enable
and
.Fn button_disable .
