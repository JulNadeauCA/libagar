.\"	$Csoft: graph.3,v 1.7 2002/09/11 23:54:10 vedge Exp $
.\"
.\" Copyright (c) 2002 CubeSoft Communications, Inc.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistribution of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Neither the name of CubeSoft Communications, nor the names of its
.\"    contributors may be used to endorse or promote products derived from
.\"    this software without specific prior written permission.
.\" 
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
.\" INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
.\" IN ANY WAY OUT OF THE USE OF THIS SOFTWARE EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd August 20, 2002
.Dt GRAPH 3
.Os
.Sh NAME
.Nm graph
.Nd agar graphic widget
.Sh SYNOPSIS
.Bd -literal
#include <engine/widget/widget.h>
#include <engine/widget/graph.h>
.Ed
.Sh DESCRIPTION
The
.Nm
widget implements a resizable/scrollable graph display that can plot
different values on a dynamic range.
.Sh INITIALIZATION
.nr nS 1
.Ft "struct graph *"
.Fn graph_new "struct region *reg" "const char *caption" "enum graph_type type" "Uint32 flags" "Sint32 yrange" "int rw" "int rh"
.Pp
.Ft void
.Fn graph_init "struct graph *graph" "const char *caption" "enum graph_type type" "Uint32 flags" "Sint32 yrange" "int rw" "int rh"
.nr nS 0
.Pp
The
.Fn graph_new
function allocates, initializes, and attaches a
.Nm
widget.
The
.Fn graph_init
function initializes a
.Nm
widget of size
.Fa rw
x
.Fa rh .
The
.Fa caption
argument is a null-terminated description string.
The
.Fa type
argument defines the type of graph, which is one of:
.Bd -literal
enum graph_type {
	GRAPH_POINTS,		/* Dots */
	GRAPH_LINES		/* Lines */
} type;
.Ed
.Pp
The
.Fa yrange
argument is the value range and may be negative.
.Fa flags
can be changed at runtime, and may include:
.Pp
.Bd -literal
#define BUTTON_PRESSED	0x01		/* Button is pressed */
#define BUTTON_STICKY	0x02		/* Button state is static */
.Ed
.Sh PLOTTING
.nr nS 1
.Ft "struct graph_item *"
.Fn graph_add_item "struct graph *graph" "char *name" "Uint32 color"
.Pp
.Ft void
.Fn graph_plot "struct graph_item *item" "Sint32 val"
.Pp
.Ft int
.Fn graph_load "struct graph_item *item" "int fd"
.Pp
.Ft int
.Fn graph_save "struct graph_item *item" "int fd"
.nr nS 0
.Pp
The
.Fn graph_add_item
function creates an item identified by the null-terminated string
.Fa name .
.Pp
The
.Fn graph_plot
function adds a value
.Fa val
to the graph item
.Fa item .
.Pp
The
.Fn graph_load
function loads graph data from file descriptor
.Fn fd .
The
.Fn graph_save
function saves graph data to file descriptor
.Fn fd .
.Sh EVENTS
The
.Nm
widget reacts to the following events:
.Pp
.Bl -tag -compact -width "window-mousebuttondown"
.It window-mousemotion
Scroll (x motion) or change the origin position (y motion).
.It window-keydown
Key 0 moves to offset 0, left key scrolls left, right key scrolls right,
S key saves the graph, L key loads the graph.
.It window-mousebuttonup
Stop moving.
.It window-mousebuttondown
Start moving.
.It widget-scaled
Adjust the graph.
.El
.Pp
The
.Nm
widget does not generate any event.
.Sh SEE ALSO
.Xr agar 3 ,
.Xr widget 3 ,
.Xr window 3 ,
.Xr region 3
.Sh HISTORY
The
.Nm
widget first appeared in AGAR 1.0.
