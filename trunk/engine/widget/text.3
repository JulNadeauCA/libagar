.\"	$Csoft: text.3,v 1.19 2004/09/14 10:55:30 vedge Exp $
.\"
.\" Copyright (c) 2002, 2003, 2004 CubeSoft Communications, Inc.
.\" <http://www.csoft.org>
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
.\" INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
.\" IN ANY WAY OUT OF THE USE OF THIS SOFTWARE EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd April 24, 2003
.Dt TEXT 3
.Os
.ds vT Agar API Reference
.ds oS Agar 1.0
.Sh NAME
.Nm text
.Nd agar font engine interface
.Sh SYNOPSIS
.Bd -literal
#include <engine/widget/text.h>
.Ed
.Sh DESCRIPTION
The
.Nm
interface uses an underlying font engine (such as FreeType) to render text.
.Sh INITIALIZATION
.nr nS 1
.Ft void
.Fn text_parse_fontspec "const char *fontspec"
.Pp
.Ft int
.Fn text_init "enum text_engine te"
.Pp
.Ft void
.Fn text_destroy "void"
.nr nS 0
.Pp
The
.Fn text_parse_fontspec
function parses a font specification of the form
.Sq face,size,style
(valid separators include
.Sq :,./ )
and assigns the default font.
This function is typically called prior to
.Fn text_init ,
to parse font specifications on the command line.
.Pp
The
.Fn text_init
function initializes the text subsystem using the given font engine:
.Bd -literal
enum text_engine {
	TEXT_ENGINE_FREETYPE,		/* FreeType */
	TEXT_ENGINE_BITMAP,		/* Fixed-size bitmap */
	TEXT_ENGINE_PIXMAP		/* Fixed-size pixmap */
};
.Ed
.Pp
.Fn text_init
selects the default font style by looking at the following
.Xr config 3
settings:
.Bl -tag -width "font-engine.default-style "
.It Va font-engine.default-font
This specifies the default font face to use.
With
.Dv TEXT_ENGINE_FREETYPE ,
this is the name of the font file to load.
With
.Dv TEXT_ENGINE_BITMAP
and
.Dv TEXT_ENGINE_PIXMAP ,
this is the name of the font bitmap file.
In both cases, the file should reside in one of the directories specified in
the
.Va font-path
.Xr config 3
setting.
.It Va font-engine.default-size
The default font size in points.
.It Va font-engine.default-style
The default font style, or flags, specified in hexadecimal format.
The meaning of these flags is specific to the font engine being used.
.El
.Pp
The
.Fn text_destroy
function frees all resources allocated by the font engine.
.Sh FONT INFORMATION
.nr nS 1
.Ft int
.Fn text_get_font_height "ttf_font *font"
.Pp
.Ft int
.Fn text_get_font_ascent "ttf_font *font"
.Pp
.Ft int
.Fn text_get_font_descent "ttf_font *font"
.Pp
.Ft int
.Fn text_get_font_line_skip "ttf_font *font"
.Pp
.nr nS 0
These functions return information specific to a given font.
.Fn text_get_font_height
returns the total height of the font in pixels.
.Fn text_get_font_ascent
returns the offset from the baseline to the top of the font.
.Fn text_get_font_descent
returns the offset from the baseline to the bottom of the font.
.Fn text_get_font_line_skip
returns the recommended spacing in pixels between lines of text.
.Sh RENDERING
.nr nS 1
.Ft "SDL_Surface *"
.Fn text_render_unicode "const char *font_name, int font_size, Uint32 color" \
                "const Uint32 *ucs"
.Pp
.Ft "SDL_Surface *"
.Fn text_render "const char *font_name, int font_size, Uint32 color" \
                "const char *text"
.Pp
.Ft "SDL_Surface *"
.Fn text_render_glyph "const char *font_name, int font_size, Uint32 color" \
                      "Uint32 uch"
.Pp
.Ft "void"
.Fn text_prescale_unicode "const Uint32 *ucs" "int *w" "int *h"
.Pp
.Ft "void"
.Fn text_prescale "const char *text" "int *w" "int *h"
.nr nS 0
.Pp
The
.Fn text_render
function renders UTF-8 text to a newly allocated surface.
.Fn text_render_unicode
renders UCS-4 text to a newly allocated surface.
.Fn text_render_glyph
renders an UCS-4 encoded Unicode character onto a new surface.
A
.Fa font_name
argument of NULL or a
.Fa font_size
argument of -1 indicates that the defaults should be used.
.Pp
The
.Fn text_prescale
and
.Fn text_prescale_unicode
functions return the expected surface dimensions for the given text.
.Sh MESSAGES AND USER INPUT
.nr nS 1
.Ft "void"
.Fn text_msg "enum text_msg_title title" "const char *format" "..."
.Pp
.Ft "void"
.Fn text_tmsg "enum text_msg_title title" "Uint32 expire" "const char *format" \
              "..."
.Pp
.Ft "void"
.Fn text_edit_float "enum text_float_type type" "double *fp" "double min" \
                    "double max" "const struct unit *unit" \
		    "const char *format" "..."
.nr nS 0
.Pp
The
.Fn text_msg
function displays a text message window containing the given
.Xr printf 3
formatted string, and an
.Sq OK
button.
The
.Fn text_tmsg
variant displays the message for a period of time given in milliseconds.
.Fa title
is one of the following:
.Bd -literal
enum text_msg_title {
	MSG_ERROR,
	MSG_WARNING,
	MSG_INFO
};
.Ed
.Pp
The
.Fn text_edit_float
function displays a window prompting the user to enter a floating-point
value.
The
.Fa fp
argument is a pointer to the variable, while
.Fa min
and
.Fa max
define the acceptable range.
Unless
.Fa unit
is NULL, the argument indicates the unit system to use (as in
.Xr units 3 ) .
.Sh TROUBLETONS
Something more sophisticated is needed to deal with unpredictable text surface
dimensions.
Currently,
.Fn text_prescale
is used prior to allocating fixed-size surfaces, but this is troublesome to
maintain with translations.
.Pp
.Fn text_render_glyph
does not work.
.Sh SEE ALSO
.Xr agar 3 ,
.Xr config 3 ,
.Xr button 3 ,
.Xr combo 3 ,
.Xr label 3 ,
.Xr radio 3 ,
.Xr spinbutton 3 ,
.Xr statusbar 3 ,
.Xr fspinbutton 3 ,
.Xr mfspinbutton 3 ,
.Xr textbox 3 ,
.Xr titlebar 3 ,
.Xr tlist 3 ,
.Xr widget 3
.Bd -literal
The FreeType project - http://www.freetype.org/
Unicode home page - http://www.unicode.org/
.Ed
.Sh HISTORY
The
.Nm
interface first appeared in Agar 1.0.
