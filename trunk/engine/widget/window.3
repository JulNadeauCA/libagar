.\"	$Csoft: window.3,v 1.11 2002/09/19 21:13:12 vedge Exp $
.\"
.\" Copyright (c) 2002 CubeSoft Communications, Inc.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistribution of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Neither the name of CubeSoft Communications, nor the names of its
.\"    contributors may be used to endorse or promote products derived from
.\"    this software without specific prior written permission.
.\" 
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
.\" INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
.\" IN ANY WAY OUT OF THE USE OF THIS SOFTWARE EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd August 21, 2002
.Dt WINDOW 3
.Os
.Sh NAME
.Nm window
.Nd agar window structure
.Sh SYNOPSIS
.Bd -literal
#include <engine/widget/widget.h>
#include <engine/widget/window.h>
.Ed
.Sh DESCRIPTION
The
.Nm
structure implements a mobile, resizable windows containing
.Xr region 3
structures, which in turn contain
.Xr widget 3
structures.
.Sh INITIALIZATION
.nr nS 1
.Ft "struct window *"
.Fn window_new "char *name" "char *caption" "int flags" "int x" "int y" "int defw" "int defh" "int minwidth, int minheight"
.Pp
.Ft void
.Fn window_init "struct window *win" "char *name" "char *caption" "int flags" "int x" "int y" "int defw" "int defh, int minwidth, int minheight"
.Pp
.Ft void
.Fn window_destroy "struct window *win"
.Pp
.Ft void
.Fn window_titlebar_printf "struct window *win" "const char *fmt" "..."
.Pp
.Ft void
.Fn window_attach "struct window *parent" "struct region *child"
.Pp
.Ft void
.Fn window_detach "struct window *parent" "struct region *child"
.nr nS 0
.Pp
The
.Fn window_new
function allocates, initializes, and attaches a
.Nm
structure.
The
.Fn window_init
function initializes a
.Nm
structure.
.Pp
The
.Fa name
argument points to a null-terminated string to identify the window, if it is
unique (so the window coordinates and geometry can be saved to disk), or
.Dv NULL
if more than one instance of this window will be created.
The
.Fa caption
argument points to a null-terminated string that will be displayed in the
title bar (which can be changed at runtime using the
.Fn window_titlebar_printf
function).
The
.Fa x
and
.Fa y
arguments define the initial absolute position of the window, and are
ignored with the
.Dv WINDOW_CENTER
flag.
The
.Fa defw
and
.Fa defh
arguments define the default window geometry in pixels (or in percentiles
of the total view size with the
.Dv WINDOW_SCALE
flag).
.Pp
The
.Fa flags
can be changed at runtime, and may include:
.Pp
.Bd -literal
#define WINDOW_PLAIN		0x001	/* Solid, no borders */
#define WINDOW_TITLEBAR		0x008	/* Draw title bar */
#define WINDOW_ROUNDEDGES	0x010	/* Round edges */
#define WINDOW_SCALE		0x020	/* Scale regions/widgets */
#define WINDOW_SHOWN		0x040	/* Visible */
#define WINDOW_CENTER		0x080	/* Center window */
#define WINDOW_SAVE_POSITION	0x100	/* Save window position on disk */
.Ed
.Pp
The
.Fn window_destroy
function frees resources allocated by a window, assuming it is no longer
attached to a view.
.Pp
The
.Fn window_attach
function attaches the region
.Fa region
to the window
.Fa parent .
The
.Fn window_detach
function detaches the region
.Fa region
from the window
.Fa parent .
The parent window must be locked when
.Fn window_attach
or
.Fn window_detach
is called.
.Pp
The
.Fn window_titlebar_printf
function sets the text shown inside the window titlebar.
The window structure must be locked when
.Fn window_titlebar_printf
is called.
.Sh VISIBILITY
.nr nS 1
.Ft int
.Fn window_show "struct window *win"
.Pp
.Ft int
.Fn window_hide "struct window *win"
.Pp
.Ft void
.Fn window_resize "struct window *win"
.nr nS 0
.Pp
The
.Fn window_show
and
.Fn window_hide
functions control the visibility of a window, returning 1 if the window was
previously visible, otherwise 0.
.Pp
The
.Fn window_resize
function effects a change in window geometry by updating the regions
and widgets inside the window
.Fa win .
The window structure
.Fa win
must be locked when
.Fn window_resize
is called.
.Sh RENDERING
.nr nS 1
.Ft void
.Fn window_draw "struct window *win"
.nr nS 0
.Pp
The
.Fn window_draw
function draws the window
.Fa win
to video memory.
The
.Fa win
structure must be locked when
.Fn window_draw
is called.
.Sh EVENT DISPATCHING
.nr nS 1
.Ft int
.Fn window_event "SDL_Event *ev"
.nr nS 0
.Pp
The
.Fn window_event
function translates the
.Xr SDL_Event 3
pointed to by the
.Fa ev
argument and dispatches appropriate events to relevant widgets.
The view structure must be locked, and the window list must not be
empty when
.Fn window_event
is called.
.Sh GENERIC EVENT HANDLERS
.nr nS 1
.Ft void
.Fn window_detach_generic "int argc" "union evarg *argv"
.nr nS 0
.Pp
The
.Fn window_detach_generic
event handler detaches the window given as the first argument, freeing all
associated resources.
.Sh EVENTS
The
.Nm
object reacts directly to events of type
.Xr SDL_Event 3 ,
translates, and dispatches them to relevant
.Xr widget 3
structures.
.Pp
The
.Nm
object delivers the following events to
.Xr widget 3
objects:
.Pp
.Bl -tag -width 2n
.It Fn window-gainfocus "void"
Window gained focus.
.It Fn window-lostfocus "void"
Window no longer focused.
.It Fn window-mousemotion "int x" "int y" "int xrel" "int yrel"
The mouse cursor has moved to widget-relative coordinates
.Fa x
and
.Fa y
(which may be negative) and the widget currently holds the focus.
The
.Fa xrel
and
.Fa yrel
arguments represent the displacement relative to the last position of the
mouse cursor.
This event is generated even when the mouse is moving outside the widget
area.
.It Fn window-mousebuttonup "int button" "int x" "int y"
The mouse button indexed by
.Fa button
was released at widget-relative
.Fa x ,
.Fa y
coordinates.
.It Fn window-mousebuttondown "int button" "int x" "int y"
The mouse button indexed by
.Fa button
was pressed at widget-relative
.Fa x ,
.Fa y
coordinates.
.It Fn window-keyup "int keysym" "int keymod"
The key identified by
.Fa keysym
was released, and the widget holds the focus.
.It Fn window-keydown "int keysym" "int keymod"
The key identified by
.Fa keysym
was pressed, and the widget holds the focus.
.It Fn window-close "void"
The window's titlebar close button was pressed.
.El
.Sh SEE ALSO
.Xr agar 3 ,
.Xr widget 3 ,
.Xr region 3
.Sh HISTORY
The
.Nm
system first appeared in AGAR 1.0.
