.\" Copyright (c) 2008-2009 Hypertriton, Inc. <http://hypertriton.com/>
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
.\" INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
.\" IN ANY WAY OUT OF THE USE OF THIS SOFTWARE EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd November 17, 2007
.Dt AG_CURSOR 3
.Os
.ds vT Agar API Reference
.ds oS Agar 1.4
.Sh NAME
.Nm AG_Cursor
.Nd agar cursor operations
.Sh SYNOPSIS
.Bd -literal
#include <agar/core.h>
#include <agar/gui.h>
#include <agar/gui/cursors.h>
.Ed
.Sh DESCRIPTION
The
.Nm
interface provides Agar applications control over the shape of the mouse
cursor; usually the hardware cursor.
These operations are specific to a given
.Xr AG_Driver 3
instance (usually retrieved from the
.Va drv
member of a
.Xr AG_Widget 3
structure).
.Pp
To prevent conflicts between widgets trying to set different cursors, Agar
associates window regions with specific cursors.
Consequently, Agar widget implementations should always use
.Fn AG_WindowMapCursor ,
.Fn AG_WindowMapStockCursor
and
.Fn AG_WindowUnmapCursor
to configure these window regions (see
.Xr AG_Window 3
for details).
.Sh INTERFACE
.nr nS 1
.Ft "AG_Cursor *"
.Fn AG_CursorNew "AG_Driver *drv" "Uint w" "Uint h" "const Uint8 *data" "const Uint8 *mask" "int xHot" "int yHot"
.Pp
.Ft "AG_Cursor *"
.Fn AG_CursorFromXPM "AG_Driver *drv" "char *xpmData[]" "int xHot" "int yHot"
.Pp
.Ft void
.Fn AG_CursorFree "AG_Driver *drv" "AG_Cursor *cursor"
.Pp
.Ft "AG_Cursor *"
.Fn AG_GetStockCursor "AG_Driver *drv" "int name"
.Pp
.Ft "AG_Cursor *"
.Fn AG_GetActiveCursor "AG_Driver *drv"
.Pp
.Ft void
.Fn AG_ShowCursor "AG_Driver *drv"
.Pp
.Ft void
.Fn AG_HideCursor "AG_Driver *drv"
.Pp
.Ft int
.Fn AG_CursorIsVisible "AG_Driver *drv"
.Pp
.nr nS 0
.Fn AG_CursorNew
registers a new hardware cursor with the underlying graphics driver.
The cursor's pixels are determined from bytes in
.Fa data
(1 = black, 0 = white)
and
.Fa mask
(1 = opaque, 0 = transparent).
The
.Fa w
and
.Fa h
arguments specify the dimensions of the surface in pixels.
The tip of the cursor is located at coordinates
.Fa xHot
and
.Fa yHot .
.Pp
.Fn AG_CursorFromXPM
creates a cursor from the contents of an XPM file.
.Pp
.Fn AG_CursorFree
releases all resources allocated by a cursor.
.Pp
.Fn AG_GetStockCursor
returns a pointer to a built-in cursor.
Acceptable values for
.Fa name
include:
.Bd -literal
enum {
	AG_FILL_CURSOR,
	AG_ERASE_CURSOR,
	AG_PICK_CURSOR,
	AG_HRESIZE_CURSOR,
	AG_VRESIZE_CURSOR,
	AG_LRDIAG_CURSOR,
	AG_LLDIAG_CURSOR,
	AG_TEXT_CURSOR,
	AG_LAST_CURSOR
};
.Ed
.Pp
.Fn AG_GetActiveCursor
returns a pointer to the currently active cursor.
.Pp
.Fn AG_ShowCursor
and
.Fn AG_HideCursor
control the visibility of the active cursor.
.Fn AG_CursorIsVisible
returns 1 if the active cursor is visible, 0 otherwise.
.Sh SEE ALSO
.Xr AG_Intro 3 ,
.Xr AG_Driver 3 ,
.Xr AG_Widget 3 ,
.Xr AG_Window 3
.Sh HISTORY
An
.Nm
interface first appeared in Agar 1.0.
A more extensive API was introduced in Agar 1.4.
