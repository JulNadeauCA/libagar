.\" Copyright (c) 2006-2007 Hypertriton, Inc. <http://hypertriton.com/>
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
.\" INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
.\" IN ANY WAY OUT OF THE USE OF THIS SOFTWARE EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd October 5, 2006
.Dt AG_FILEDLG 3
.Os
.ds vT Agar API Reference
.ds oS Agar 1.1
.Sh NAME
.Nm AG_FileDlg
.Nd agar file browser widget
.Sh SYNOPSIS
.Bd -literal
#include <agar/gui.h>
.Ed
.Sh DESCRIPTION
.Nm
is a file selection widget.
It is typically used to implement file dialog boxes where actions are tied
to specific file extensions.
.Sh INHERITANCE HIERARCHY
.Xr AG_Object 3 ->
.Xr AG_Widget 3 ->
.Nm .
.Sh INITIALIZATION
.nr nS 1
.Ft AG_FileDlg *
.Fn AG_FileDlgNew "AG_Widget *parent" "Uint flags"
.Pp
.Ft void
.Fn AG_FileDlgInit "AG_FileDlg *file_dlg" "Uint flags"
.Pp
.Ft int
.Fn AG_FileDlgSetDirectory "AG_FileDlg *file_dlg" "const char *path"
.Pp
.Ft int
.Fn AG_FileDlgSetDirectoryMRU "AG_FileDlg *file_dlg" "const char *configKey" "const char *defaultDir"
.Pp
.Ft void
.Fn AG_FileDlgSetFilename "AG_FileDlg *file_dlg" "const char *fmt" "..."
.Pp
.Ft "AG_FileType *"
.Fn AG_FileDlgAddType "AG_FileDlg *file_dlg" "const char *descr" "const char *exts" "void (*fn)(AG_Event *)" "const char *fmt" "..."
.Pp
.nr nS 0
The
.Fn AG_FileDlgNew
function allocates, initializes, and attaches a new
.Nm
widget.
.Fn AG_FileDlgInit
initializes a preallocated
.Nm
widget.
.Pp
Acceptable
.Fa flags
include:
.Bd -literal
#define AG_FILEDLG_MULTI    0x01    /* Return a set of files */
#define AG_FILEDLG_CLOSEWIN 0x02    /* Close the parent window when done */
#define AG_FILEDLG_LOAD     0x04    /* File must exist and be readable */
#define AG_FILEDLG_SAVE	    0x08    /* File must be writeable */
.Ed
.Pp
The working directory can be set manually with the
.Fn AG_FileDlgSetDirectory
function, which will return 0 on success and -1 on failure.
.Pp
The
.Fn AG_FileDlgSetDirectoryMRU
sets the working directory according to an
.Xr AG_Config 3
parameter named
.Fa configKey .
If the parameter does not exist, it will be set to
.Fa defaultDir
(it is customary to use a name such as
.Sq myapp.mru.foofiles ) .
If
.Fn AG_FileDlgSetDirectoryMRU
is used, subsequent directory changes will cause the current
.Xr AG_Config 3
settings to be saved automatically.
.Pp
The
.Fn AG_FileDlgSetFilename
function sets the filename to initially display in the textbox.
It is typically used in file saving dialogs.
.Pp
The
.Fn AG_FileDlgAddType
function registers a file format/extension, optionally associated with an
event handler function (see
.Xr AG_Event 3 )
to invoke when a file of that type if selected.
.Ft descr
is a description of the file format and
.Ft exts
is a comma-separated list of file extensions to associate with the type, or
an empty string.
.Pp
.Sh OK/CANCEL ACTIONS
.Pp
The default action that is performed when a user selects a file is:
.Bl -enum -compact
.It
If
.Dv AG_FILEDLG_LOAD
or
.Dv AG_FILEDLG_SAVE
is set, check whether the file is readable or writeable.
.It
If
.Dv AG_FILEDLG_SAVE
is set and a file exists, display a "Replace file?" prompt.
.It
Execute the matching function (based on file extension), as previously
registered by
.Fn AG_FileDlgAddType .
.It
If
.Dv AG_FILEDLG_CLOSEWIN
is set, close the parent window.
.El
.Pp
The default action performed when a user clicks on "Cancel" is simply to
close the parent window if
.Dv AG_FILEDLG_CLOSEWIN
is set.
.Pp
These default actions can be overridden using the functions below:
.Pp
.nr nS 1
.Ft "void"
.Fn AG_FileDlgOkAction "AG_FileDlg *file_dlg" "void (*fn)(AG_Event *)" "const char *fmt" "..."
.Pp
.Ft "void"
.Fn AG_FileDlgCancelAction "AG_FileDlg *file_dlg" "void (*fn)(AG_Event *)" "const char *fmt" "..."
.Pp
.Ft "int"
.Fn AG_FileDlgCheckReadAccess "AG_FileDlg *file_dlg"
.Pp
.Ft "int"
.Fn AG_FileDlgCheckWriteAccess "AG_FileDlg *file_dlg"
.nr nS 0
.Pp
The
.Fn AG_FileDlgOkAction
function configures an event handler function to invoke when a file is
selected, overriding the default behavior.
The event handler will be passed a string argument containing the
absolute path to the selected file, followed by a pointer to the
.Ft AG_FileType
structure for the file type selected by the user.
The public members of the structure are:
.Bd -literal
typedef struct ag_file_type {
	const char *descr;                /* Description */
	char **exts;                      /* Filename extensions */
	Uint nexts;
	AG_Event *action;                 /* Action (save/load) */
} AG_FileType;
.Ed
.Pp
.Fn AG_FileDlgCancelAction
overrides the default behavior of the "Cancel" button.
.Pp
The utility functions
.Fn AG_FileDlgCheckReadAccess
and
.Fn AG_FileDlgCheckWriteAccess
evaluate whether the selected file is readable or writeable.
.Sh BINDINGS
The
.Nm
widget does not provide any bindings.
.El
.Sh EVENTS
The
.Nm
widget reacts to the following events:
.Pp
.Bl -tag -compact -width "pushed (Cancel button) "
.It dblclick (dir list)
Change the working directory.
.It dblclick (file list)
Select the given file.
If either
.Dv AG_FILEDLG_LOAD
or
.Dv AG_FILEDLG_SAVE
is set, display an error if the file is not readable or writeable.
Otherwise, the
.Sq file-chosen
event is raised.
The widget will also request that its parent window be closed if the
.Dv AG_FILEDLG_CLOSEWIN
flag is set.
.It selected (file list)
Raise the
.Sq file-selected
event.
.It return (text input)
If the entered path is an existing directory, change the working directory.
Otherwise, assume that the path refers to a file and select it.
.Xr glob 3
is used on systems that support it.
.It pushed (OK button)
Select the current file, checking for needed permissions if either
.Dv AG_FILEDLG_LOAD
or
.Dv AG_FILEDLG_SAVE
is set.
Also closes parent window if
.Dv AG_FILEDLG_CLOSEWIN is set.
.It pushed (Cancel button)
Closes the parent window if
.Dv AG_FILEDLG_CLOSEWIN
is set, otherwise a no-op.
.El
.Pp
The
.Nm
widget generates the following events:
.Pp
.Bl -tag -width 2n
.It Fn file-chosen "char *path" "AG_FileType *type"
User has selected the given file.
.Fa path
is the full pathname to the file.
If not NULL,
.Fa type
describes the file type that was selected by the user.
.It Fn file-selected "char *path"
User has moved selection over the given file, where
.Fa path
is the full pathname to it.
This event is typically used by file loader dialogs for previewing file
contents using an external widget.
.It Fn dir-selected "void"
The given directory was selected.
.El
.Sh EXAMPLES
.Pp
See the
.Pa loader
demo in the Agar
.Pa demos
directory.
.Sh SEE ALSO
.Xr AG_Intro 3 ,
.Xr AG_Widget 3 ,
.Xr AG_Window 3
.Sh HISTORY
The
.Nm
widget first appeared in Agar 1.0.
