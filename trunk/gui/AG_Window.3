.\"	$Csoft: window.3,v 1.50 2005/10/01 14:15:19 vedge Exp $
.\"
.\" Copyright (c) 2002, 2003, 2004, 2005, 2007 CubeSoft Communications, Inc.
.\" <http://www.csoft.org>
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
.\" INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
.\" IN ANY WAY OUT OF THE USE OF THIS SOFTWARE EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd August 21, 2002
.Dt AG_WINDOW 3
.Os
.ds vT Agar API Reference
.ds oS Agar 1.0
.Sh NAME
.Nm AG_Window
.Nd agar window system
.Sh SYNOPSIS
.Bd -literal
#include <agar/gui.h>
.Ed
.Sh DESCRIPTION
The
.Nm
object implements a mobile, resizable container for widgets; it is
itself derived from the
.Xr AG_Widget 3
structure and attached to a
.Xr AG_View 3 .
Currently there is only one view; multiple views will be supported when
SDL implements multiple displays.
By default, the container behavior of
.Nm
is similar to
.Xr AG_VBox 3
and an
.Xr AG_Titlebar 3
is attached to the window at creation time.
.Pp
When a window first becomes visible, its child widgets are queried for a
default, minimum size and the window is sized to accomodate them as much as
possible within the current view.
After this initial sizing, containers can resize their children further.
.Pp
Commonly used containers include
.Xr AG_Box 3 ,
.Xr AG_VBox 3
and
.Xr AG_HBox 3
for automatic horizontal and vertical packing,
.Xr AG_Fixed 3
for explicit pixel-precision packing,
.Xr AG_Pane 3
for dual partitions and
.Xr AG_Notebook 3
for notebook-style display.
.Sh INHERITANCE HIERARCHY
.Xr AG_Object 3 ->
.Xr AG_Widget 3 ->
.Nm .
.Sh INITIALIZATION
.nr nS 1
.Ft "AG_Window *"
.Fn AG_WindowNew "Uint flags"
.Pp
.Ft "AG_Window *"
.Fn AG_WindowNewNamed "Uint flags" "const char *name" "..."
.Pp
.Ft "void"
.Fn AG_WindowInit "AG_Window *win" "const char *name" "int flags"
.Pp
.Ft "void"
.Fn AG_WindowSetCaption "AG_Window *win" "const char *fmt" "..."
.Pp
.Ft "void"
.Fn AG_WindowSetCloseAction "AG_Window *win" "int mode"
.Pp
.Ft "void"
.Fn AG_WindowSetPadding "AG_Window *win" "int xpadding" "int ypadding_top" "int ypadding_bot"
.Pp
.Ft "void"
.Fn AG_WindowSetSpacing "AG_Window *win" "int spacing"
.Pp
.Ft "void"
.Fn AG_WindowSetPosition "AG_Window *win, enum ag_window_alignment alignment" "int cascade"
.Pp
.Ft "void"
.Fn AG_WindowSetGeometry "AG_Window *win" "int x" "int y" "int w" "int h"
.Pp
.Ft void
.Fn AG_WindowAttach "AG_Window *win" "AG_Window *subwin"
.Pp
.Ft void
.Fn AG_WindowDetach "AG_Window *win" "AG_Window *subwin"
.Pp
.Ft void
.Fn AG_WindowFocus "AG_Window *win"
.Pp
.nr nS 0
The
.Fn AG_WindowNew
allocates, initializes and attach a new unnamed window.
The default close action assigned it "detach" (destroy the window).
.Pp
The
.Fn AG_WindowNewNamed
variant tries to create a named window.
If a window of that name exists, the function places the focus on that window
and returns NULL.
The default close action assigned to named windows is "hide".
.Pp
The
.Fn AG_WindowInit
function initializes a preallocated
.Nm
structure.
Acceptable flags include:
.Pp
.Bd -literal
#define AG_WINDOW_MODAL		0x00001	/* Place in foreground */
#define AG_WINDOW_MAXIMIZED	0x00002	/* Window is maximized */
#define AG_WINDOW_MINIMIZED	0x00004	/* Window is minimized */
#define AG_WINDOW_KEEPABOVE	0x00008	/* Keep window above */
#define AG_WINDOW_KEEPBELOW	0x00010	/* Keep window below */
#define AG_WINDOW_DENYFOCUS	0x00020	/* Widgets cannot gain focus */
#define AG_WINDOW_NOTITLE	0x00040	/* Disable the titlebar */
#define AG_WINDOW_NOBORDERS	0x00080	/* Disable the window borders */
#define AG_WINDOW_NOHRESIZE	0x00100	/* Disable horizontal resize */
#define AG_WINDOW_NOVRESIZE	0x00200	/* Disable vertical resize */
#define AG_WINDOW_NOCLOSE	0x00400	/* Disable close button */
#define AG_WINDOW_NOMINIMIZE	0x00800	/* Disable minimize button */
#define AG_WINDOW_NOMAXIMIZE	0x01000	/* Disable maximize button */
#define AG_WINDOW_NOBACKGROUND	0x08000	/* Don't fill the background */
#define AG_WINDOW_NOUPDATERECT	0x10000	/* Don't update rectangle */
#define AG_WINDOW_NORESIZE	(AG_WINDOW_NOHRESIZE|AG_WINDOW_NOVRESIZE)
.Ed
.Pp
The
.Fn AG_WindowSetCaption
function sets the text displayed by the titlebar (if there is one).
The string is truncated if its length exceeds
.Dv AG_LABEL_MAX
- 1 bytes.
.Pp
The
.Fn AG_WindowSetCloseAction
function changes the current
.Sq window-close
event handler to one of the predefined handlers:
.Pp
.Bd -literal
enum ag_window_close_action {
	AG_WINDOW_HIDE,
	AG_WINDOW_DETACH
};
.Ed
.Pp
The
.Fn AG_WindowSetPadding
function defines the space in pixels separating the widgets from the edges
of the window.
.Pp
The
.Fn AG_WindowSetSpacing
function defines the space separating the widgets from each other.
The default is 2 pixels.
.Pp
Note that
.fn AG_WindowSetSpacing
only affects the widgets which are directly attached to the window.
For widgets that are attached to container widgets, it is the container
widgets that define spacing, as well as other aspects of widget
organization.
For instance, the
.Xr AG_Box 3
container widget provides a
.Fn AG_BoxSetSpacing
function .
.Pp
The
.Fn AG_WindowSetPosition
function requests an initial window position, which may be one of:
.Pp
.Bd -literal
enum ag_window_alignment {
	AG_WINDOW_UPPER_LEFT,
	AG_WINDOW_MIDDLE_LEFT,
	AG_WINDOW_LOWER_LEFT,
	AG_WINDOW_UPPER_RIGHT,
	AG_WINDOW_MIDDLE_RIGHT,
	AG_WINDOW_LOWER_RIGHT,
	AG_WINDOW_CENTER,
	AG_WINDOW_LOWER_CENTER,
	AG_WINDOW_UPPER_CENTER
};
.Ed
.Pp
If the
.Fa cascade
argument is 1, the window position is slightly incremented or decremented at
each call (depending on the preferred alignment).
.Pp
The
.Fn AG_WindowSetGeometry
function allows manual modification of a window's position and size in terms
of pixels.
It should be invoked after the window's child widgets are created, otherwise
no minimum geometry will be enforced when the window is later resized.
.Pp
Finally, the
.Fn AG_WindowAttach
function arranges for
.Fa pwin
to be the parent window of
.Fa win ,
such that
.Fa win
is automatically destroyed when
.Fa pwin
is detached (through
.Xr AG_ViewDetach 3 ) .
.Pp
The
.Fn AG_WindowDetach
function removes
.Fa win
from its parent window
.Fa pwin .
.Pp
The
.Fn AG_WindowFocus
function sets the focus on the given window.
If the currently focused window has the
.Dv AG_WINDOW_KEEPABOVE
flag set, this function becomes a no-op.
.Sh VISIBILITY
.nr nS 1
.Ft void
.Fn AG_WindowShow "AG_Window *win"
.Pp
.Ft void
.Fn AG_WindowHide "AG_Window *win"
.Pp
.Ft int
.Fn AG_WindowToggleVisibility "AG_Window *win"
.Pp
.nr nS 0
The
.Fn AG_WindowShow
function marks
.Fa win
as visible.
.Fn AG_WindowHide
marks
.Fa win
as invisible.
.Fn AG_WindowToggleVisibility
inverts the visibility state of
.Fa win .
.Sh GENERIC EVENT HANDLERS
.nr nS 1
.Ft void
.Fn AG_WindowDetachGenEv "int argc" "union evarg *argv"
.Pp
.Ft void
.Fn AG_WindowHideGenEv "int argc" "union evarg *argv"
.Pp
.Ft void
.Fn AG_WindowShowGenEv "int argc" "union evarg *argv"
.Pp
.Ft void
.Fn AG_WindowCloseGenEv "int argc" "union evarg *argv"
.Pp
.nr nS 0
The
.Fn AG_WindowDetachGenEv
event handler detaches the given window, freeing associated resources.
.Fn AG_WindowHideGenEv
hides the given window, if it is currently visible.
.Fn AG_WindowShowGenEv
invokes
.Fn AG_WindowShow
on the given window.
.Fn AG_WindowCloseGenEv
sends an
.Sq window-close
event to the given window.
A pointer to the window is passed as argument 1 to those event handlers.
.Pp
The
.Fn AG_WindowSetCloseAction
function is an alternative to assigning these event handlers manually.
.Sh EVENTS
The
.Nm
widget delivers the following events to its child widgets:
.Pp
.Bl -tag -width 2n
.It Fn window-mousemotion "int x" "int y" "int xrel" "int yrel" "int state"
The mouse cursor has moved to widget-relative coordinates
.Fa x
and
.Fa y
(which may be negative).
The
.Fa xrel
and
.Fa yrel
arguments represent the displacement relative to the last position of the
mouse cursor.
.Fa state
holds the present button state, as returned by
.Xr SDL_GetMouseState 3 .
Regardless of the mouse position, this event is posted to widgets that either
hold focus inside the focused window, or have the
.Dv AG_WIDGET_UNFOCUSED_MOTION
flag set.
.It Fn window-mousebuttonup "int button" "int x" "int y"
The mouse button indexed by
.Fa button
was released at widget-relative
.Fa x ,
.Fa y
coordinates.
Regardless of the mouse position, this event is posted to the widget that
holds focus inside the focused window.
.It Fn window-mousebuttondown "int button" "int x" "int y"
The mouse button indexed by
.Fa button
was pressed at widget-relative
.Fa x ,
.Fa y
coordinates, which must be inside the widget area.
.It Fn window-keyup "int keysym" "int keymod"
The key identified by
.Fa keysym
was released, and the widget holds the focus.
.It Fn window-keydown "int keysym" "int keymod" "int unicode"
The key identified by
.Fa keysym
was pressed, and the widget holds the focus.
.It Fn window-close "void"
The window's titlebar close button was pressed.
This event is generated after the window is no longer visible.
.It Fn window-shown "void"
The window is now visible.
.It Fn window-hidden "void"
The window is no longer visible.
.It Fn window-modal-close "void"
The
.Dv AG_WINDOW_MODAL
flag is set and the user requested to close the window.
.El
.Sh SEE ALSO
.Xr AG_Intro 3 ,
.Xr AG_Widget 3
.Sh HISTORY
The
.Nm
system first appeared in Agar 1.0.
