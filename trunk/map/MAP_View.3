.\"	$Csoft: mapview.3,v 1.7 2005/06/17 08:37:50 vedge Exp $
.\"
.\" Copyright (c) 2002, 2003, 2004, 2005 CubeSoft Communications, Inc.
.\" <http://www.csoft.org>
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
.\" INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
.\" IN ANY WAY OUT OF THE USE OF THIS SOFTWARE EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd August 20, 2002
.Dt MAP_VIEW 3
.Os
.ds vT Agar API Reference
.ds oS Agar 1.3
.Sh NAME
.Nm MAP_View
.Nd agar map display/edition widget
.Sh SYNOPSIS
.Bd -literal
#include <agar/map/mapview.h>
.Ed
.Sh DESCRIPTION
The
.Nm
widget renders part of a
.Xr MAP 3
structure.
.Sh INITIALIZATION
.nr nS 1
.Ft MAP_View *
.Fn MAP_ViewNew "void *parent" "MAP *map" "int flags" "AG_Toolbar *toolbar" "AG_Statusbar *statbar"
.Pp
.Ft void
.Fn MAP_ViewInit "MAP_View *mv" "MAP *map" "int flags" "AG_Toolbar *toolbar" "AG_Statusbar *statbar"
.Pp
.Ft void
.Fn MAP_ViewPrescale "MAP_View *mv" "int w" "int h"
.Pp
.Ft void
.Fn MAP_ViewSetScale "MAP_View *mv" "Uint zoom" "int adj_offs"
.nr nS 0
.Pp
The
.Fn MAP_ViewNew
function allocates, initializes, and attaches a
.Nm
widget.
The
.Fn MAP_ViewInit
function initializes a
.Nm
widget displaying the given
.Fa map .
The
.Fa flags
may include:
.Bd -literal
#define MAP_VIEW_EDIT         0x01	/* Mouse/keyboard edition */
#define MAP_VIEW_GRID         0x02	/* Display the grid */
#define MAP_VIEW_PROPS        0x04	/* Display node properties */
#define MAP_VIEW_CENTER       0x08	/* Request initial centering */
#define MAP_VIEW_NO_CURSOR    0x10	/* Disable the cursor */
#define MAP_VIEW_NO_BMPSCALE  0x20	/* Disable bitmap scaling */
#define MAP_VIEW_NO_BG        0x40	/* Disable background tiles */ 
#define MAP_VIEW_NO_NODESEL   0x80	/* Disable node selections */
.Ed
.Pp
If
.Fa toolbar
is not NULL, the
.Nm
will automatically create buttons in it for each tool registered with
.Fn MAP_ViewRegTool .
.Pp
The
.Dv MAP_VIEW_EDIT
flag enables write operations on the map, assuming the level editor,
.Xr mapedit 3 ,
is initialized.
.Pp
The
.Fn MAP_ViewPrescale
function arranges for the
.Nm
to reserve enough space to display
.Fa w
by
.Fa h
nodes at the initial sizing stage.
.Pp
The
.Fn MAP_ViewSetScale
function sets the scaling factor to
.Fa zoom ,
given in % of the default tile geometry.
If the
.Fa adj_offs
argument is nonzero, the camera is offset to preserve centering.
.Sh SELECTIONS
.nr nS 1
.Ft void
.Fn MAP_ViewSetSelection "MAP_View *mv" "int x" "int y" "int w" "int h"
.Pp
.Ft int
.Fn MAP_ViewGetSelection "MAP_View *mv" "int *x" "int *y" "int *w" "int *h"
.Pp
.nr nS 0
The
.Fn MAP_ViewSetSelection
function sets the active selection to
.Fa w
by
.Fa h
nodes at map position
.Fa x ,
.Fa y .
.Fn MAP_ViewSetSelection
also disables any mouse selection in progress.
.Pp
The
.Fn MAP_ViewGetSelection
returns 1 if there is an active selection or 0 if there is none.
If there is no selection, no value is written to
.Fa x ,
.Fa y ,
.Fa w
and
.Fa h .
.Sh EXTENSIONS
.nr nS 1
.Ft void
.Fn MAP_ViewRegTool "MAP_View *mv" "const MAP_Tool *toolspec" "void *arg"
.Pp
.Ft void
.Fn MAP_ViewSetDefaultTool "MAP_View *mv" "MAP_Tool *tool"
.Pp
.Ft void
.Fn MAP_ViewRegDrawCb "MAP_View *mv" "void (*f)(MAP_View *mv, void *p)"
.nr nS 0
.Pp
The
.Nm
widget provides a generic interface for tools that must accomplish
diverse map operations.
.Fn MAP_ViewRegTool
registers a tool for use from a
.Nm .
.Fa toolspec
is assumed to point to a
.Ft tool
structure with the following fields properly initialized:
.Bd -literal
typedef struct map_tool {
	const char *name;		/* Name of the tool */
	const char *desc;		/* Short description */
	int icon;			/* Icon (-1 = none) */
	int cursor_index;		/* Static cursor (-1 = none) */

	void (*init)(MAP_Tool *t);
	void (*destroy)(MAP_Tool *t);
	int  (*load)(MAP_Tool *t, AG_Netbuf *b);
	int  (*save)(MAP_Tool *t, AG_Netbuf *b);
	int  (*cursor)(MAP_Tool *t, SDL_Rect *r);
	void (*effect)(MAP_Tool *t, MAP_Node *n);
	int (*mousemotion)(MAP_Tool *t, int x, int y, int xrel,
	                  int yrel, int xo, int yo, int xorel,
			  int yorel, int button_state);
	int (*mousebuttondown)(MAP_Tool *t, int x, int y, int xoff,
	                       int yoff, int button);
	int (*mousebuttonup)(MAP_Tool *t, int x, int y, int xoff,
	                     int yoff, int button);
	int (*keydown)(MAP_Tool *t, int ksym, int kmod);
	int (*keyup)(MAP_Tool *t, int ksym, int kmod);
} MAP_Tool;
.Ed
.Pp
The
.Fn init ,
.Fn destroy ,
.Fn load
and
.Fn save
operations are used to initialize, free, save and restore any private data
structures needed by the tool.
.Pp
The
.Fn cursor
operation is expected to draw the current cursor at the screen coordinates
given by the
.Xr SDL_Rect
argument.
.Pp
The
.Fn effect
operation is executed on mouse click events, and on mouse motion events where
the relative map (node) coordinates are >|1|.
Typically, simple tools that perform node-specific operations such as the
.Sq stamp
and
.Sq eraser
tools will use this operation.
.Pp
Tools that perform more complex operations (such as vector graphics
manipulations) will generally use the lower-level
.Fn mousemotion ,
.Fn mousebuttondown ,
.Fn mousebuttonup ,
.Fn keydown
and
.Fn keyup
operations.
If any of these functions return a value of 1, the given event will not be
forwarded to the mouse/keyboard tool bindings and default operations.
.Pp
The
.Fn MAP_ViewSetDefaultTool
function configures a default tool which will receive all events that have
not been processed by the active tool or a mouse event binding.
.Pp
The
.Fn MAP_ViewRegDrawCb
function registers a function to invoke every time the
.Nm
widget is redrawn.
.Sh EVENTS
The
.Nm
widget reacts to the following events:
.Pp
.Bl -tag -width 25n
.It widget-lostfocus
Stop any zooming in progress.
.It window-mousebutton*
Forward the mouse button event to the active tool, if any.
If the active tool's handler routine returns != 1, the list of mouse bindings
is searched and matches are invoked, regardless of whether the given tool is
active or not.
Unless the mouse binding entry has the
.Va override
flag set, default actions apply.
.Pp
The default actions include selection of node elements (left click), popup
menu (middle click), panning (right click) and zooming (wheel up/down).
.It window-mousemotion
Scroll the view if panning is in progress.
If a rectangular selection is in progress, adjust the position relative to
the selection origin.
In edition mode, call current tool if the left mouse button is held.
.It window-keydown
The default key bindings are:
.Bl -tag -width "SDLK_EQUALS " -compact
.It Dv SDLK_EQUALS
Increment the zoom.
.It Dv SDLK_MINUS
Decrement the zoom.
.It Dv SDLK_[01]
Zoom to 1:1 (no scaling).
.It Dv SDLK_[2-9]
Zoom to a predefine value.
.It Dv SDLK_o
Center around the map origin.
.El
.It window-keyup
Stop any zooming in progress
.El
.Pp
The
.Nm
widget generates the following events:
.Pp
.Bl -tag -compact -width 2n
.It Fn mapview-dblclick "int button" "int x" "int y" "int xoff" "int yoff"
The user double clicked over the given tile.
.El
.Sh SEE ALSO
.Xr AG_Intro 3 ,
.Xr MAP 3 ,
.Xr AG_Widget 3 ,
.Xr AG_Window 3
.Sh HISTORY
The
.Nm
widget first appeared in Agar 1.0.
