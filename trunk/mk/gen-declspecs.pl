#!/usr/bin/perl
#
# Public domain.
# 
# Look for __{BEGIN,END}_DECLS blocks in C header files and insert the
# "DECLSPEC" keyword required on some platforms, where appropriate.
#

my @input = ();
my $decls = 0;
my @blk = ();
my $trunc = 0;
my $truncLine = '';
my $outFile = '';

if (@ARGV == 0) {
	print STDERR "Usage: gen-declspecs.pl [file]\n";
	exit(1);
}
$outFile = $ARGV[0];

open(F, $ARGV[0]) || die "$ARGV[0]: $!";
open(OUT, ">$outFile.tmp") || die ">$outFile.tmp: $!";

#
# First pass: Process cpp long lines.
#
while (<F>) {
	chop;
	if ($trunc) {
		$truncLine .= ' '.$_;
		if (!/\\$/) {
			push @input, $truncLine;
			$truncLine = '';
			$trunc = 0;
		} else {
			chop($truncLine);
		}
	} else {
		if (/\\$/) {
			chop;
			$truncLine = $_;
			$trunc = 1;
		} else {
			push @input, $_;
		}
	}
}

#
# Second pass: Process function/variable declarations.
#
foreach $_ (@input) {
	if (/^\s*__BEGIN_DECLS\s*$/) {
		print OUT $_,"\n";
		print OUT << 'EOF';
/* Generated by BSDBuild from headers in tar.gz source distribution. */
EOF
		$decls = 1;
		@blk = ();
		next;
	}
	if (!$decls) {
		print OUT $_."\n";
		next;
	}
	if (/^\s*$/) {
		next;
	}
	if ($trunc) {
		$truncLine .= ' '.$_;
		if (/;\s*$/) {
			$trunc = 0;
			push @blk, $truncLine;
			$truncLine = '';
		}
	} else {
		if ((!/;\s*$/) &&
		    (!/^\s*\/\*.*\*\/\s*$/ && !/^\s*\/\//) &&	# Comment
		    (!/^\s*#/)) {				# Define
			$trunc = 1;
			$truncLine = $_;
		} else {
			push @blk, $_;
		}
	}
	if (/^\s*__END_DECLS\s*$/) {
		$decls = 0;
		foreach my $line (@blk) {
			if ($line =~ /^\s*extern\s*(\w+)\s*(\w+)\s*/s) {
				print OUT 'extern DECLSPEC '."$1 $2;\n";
				next;
			} elsif ($line =~ /^\s*([\w\*]+)\s+([\w\*]+)
					    \(([\w\*\s,]*)\)\s*;\s*/x) {
				print OUT 'extern DECLSPEC '."$1 $2($3);\n";
				next;
			}
			$line =~ s/\s+/ /g;
			print OUT $line."\n";
		}
		print OUT $_,"\n";
	}
}

close(OUT);
close(F);
rename($outFile.'.tmp', $outFile) || die "$outFile: $!";

